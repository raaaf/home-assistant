# Helpers - Presence.Yaml
# Generated by automation splitter - 4 automations
# Part of Home Assistant configuration

- id: '1648113506269'
  alias: Helper » Alle sind weg
  description: Erkennt wenn niemand zu Hause ist basierend auf Standortdaten
  triggers:
  - entity_id: person.alex
    zone: zone.home
    event: leave
    trigger: zone
  - entity_id: person.rafael
    zone: zone.home
    event: leave
    trigger: zone
  conditions:
  - condition: not
    conditions:
    - condition: zone
      entity_id: person.alex
      zone: zone.home
  - condition: not
    conditions:
    - condition: zone
      entity_id: person.rafael
      zone: zone.home
  actions:
  - target:
      entity_id: input_boolean.alle_sind_weg
    action: input_boolean.turn_on
  mode: single
- id: '1648229228602'
  alias: Helper » Jemand kommt nachhause
  description: Setzt den 'Alle sind weg'-Status zurück wenn jemand nach Hause kommt
  triggers:
  - entity_id: device_tracker.alex_iphone_alex
    to: home
    id: alex-da
    trigger: state
  - entity_id: device_tracker.iphone_rafael
    to: home
    id: rafael-da
    trigger: state
  conditions: []
  actions:
  - target:
      entity_id: input_boolean.alle_sind_weg
    action: input_boolean.turn_off
  mode: restart
- id: '1662914276095'
  alias: Helper » Better Presence
  description: 'Verwaltet detaillierte Anwesenheitsstatus (Gerade angekommen, Weg,
    Länger weg) für Personen

    '
  triggers:
  - entity_id:
    - person.rafael
    - person.alex
    from: not_home
    to: home
    id: Just Arrived
    variables:
      name: '{{ trigger.entity_id | replace(''person.'', '''') }}'
    trigger: state
  - entity_id:
    - input_select.status_rafael
    - input_select.status_alex
    to: Just Arrived
    for:
      minutes: 10
    id: Home
    variables:
      name: '{{ trigger.entity_id | replace(''input_select.status_'', '''') }}'
    trigger: state
  - entity_id:
    - person.rafael
    - person.alex
    from: home
    to: not_home
    id: Just Left
    variables:
      name: '{{ trigger.entity_id | replace(''person.'', '''') }}'
    trigger: state
  - entity_id:
    - input_select.status_rafael
    - input_select.status_alex
    to: Just Left
    for:
      minutes: 10
    id: Away
    variables:
      name: '{{ trigger.entity_id | replace(''input_select.status_'', '''') }}'
    trigger: state
  - entity_id:
    - input_select.status_rafael
    - input_select.status_alex
    to: Away
    for:
      hours: 24
    id: Extended Away
    variables:
      name: '{{ trigger.entity_id | replace(''input_select.status_'', '''') }}'
    trigger: state
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id: Just Arrived
      sequence:
      - choose:
        - conditions:
          - condition: or
            conditions:
            - condition: template
              value_template: '{{ is_state(''input_select.status_'' ~ name, ''Just
                Left'') }}

                '
            - condition: template
              value_template: '{{ is_state(''input_select.status_'' ~ name, ''Just
                Arrived'') }}

                '
          sequence:
          - data:
              option: home
            target:
              entity_id: '{{ ''input_select.status_'' ~ name }}'
            action: input_select.select_option
        default:
        - data:
            option: Just Arrived
          target:
            entity_id: '{{ ''input_select.status_'' ~ name }}'
          action: input_select.select_option
    - conditions:
      - condition: trigger
        id: Home
      sequence:
      - data:
          option: home
        target:
          entity_id: '{{ ''input_select.status_'' ~ name }}'
        action: input_select.select_option
    - conditions:
      - condition: trigger
        id: Just Left
      sequence:
      - data:
          option: Just Left
        target:
          entity_id: '{{ ''input_select.status_'' ~ name }}'
        action: input_select.select_option
    - conditions:
      - condition: trigger
        id: Away
      sequence:
      - data:
          option: Away
        target:
          entity_id: '{{ ''input_select.status_'' ~ name }}'
        action: input_select.select_option
    - conditions:
      - condition: trigger
        id: Extended Away
      sequence:
      - data:
          option: Extended Away
        target:
          entity_id: '{{ ''input_select.status_'' ~ name }}'
        action: input_select.select_option
  mode: parallel
- id: '1720627612083'
  alias: State » Anwesen- / Abwesenheit
  description: Verwaltet Anwesenheits-Status und zugehörige Aktionen
  triggers:
  - trigger: state
    entity_id:
    - input_boolean.alle_sind_weg
    to: 'on'
    for:
      hours: 0
      minutes: 15
      seconds: 0
    id: alle-weg-kurz
  - trigger: state
    entity_id: input_boolean.alle_sind_weg
    to: 'on'
    for: '24:00:00'
    id: alle-weg-lang
  - trigger: state
    entity_id: input_boolean.alle_sind_weg
    to: 'off'
    id: alle-da
  - trigger: state
    entity_id: lock.smart_lock_pro
    to: locked
    for: 00:15:00
    id: locked
  - trigger: state
    entity_id: lock.smart_lock_pro
    to: unlocked
    id: unlocked
  - trigger: time
    at: '22:00:00'
    id: nightmode_lock
  - trigger: state
    entity_id: timer.timer_fur_automatisches_turverschliessen
    from: active
    to: idle
    id: timer
  conditions: []
  actions:
  - choose:
    - alias: Warnung bei offenen Fenstern/Türen
      conditions:
      - condition: trigger
        id: alle-weg-kurz
      - alias: Kein Gast-Modus aktiv
        condition: state
        entity_id: input_boolean.guest_or_away
        state: 'off'
      - condition: template
        value_template: "{{ has_value('input_boolean.guest_or_away') }}"
      - alias: Fenster oder Türen sind offen
        condition: state
        entity_id: input_boolean.fenster_tueren_offen
        state: 'on'
      sequence:
      - alias: Benachrichtigung über offene Fenster/Türen
        action: notify.family
        data:
          title: Es sind noch Fenster oder Türen offen!
          message: "{% set doors = state_attr('binary_sensor.fenster_tueren', 'entity_id')\
            \ %} {{ expand(doors) | selectattr('state','in',['on', 'open']) | \n \
            \  map(attribute='name') | join(', ') | default('Alle geschlossen', true)\
            \ }}\n"
    - alias: Alle weg (kurze Abwesenheit) - Energiesparmodus
      conditions:
      - condition: trigger
        id: alle-weg-kurz
      - alias: Kein Gast-Modus aktiv
        condition: state
        entity_id: input_boolean.guest_or_away
        state: 'off'
      - condition: template
        value_template: "{{ has_value('input_boolean.guest_or_away') }}"
      sequence:
      - alias: Alle eingeschalteten Lichter ausschalten
        choose:
        - conditions:
          - alias: Es sind Lichter an
            condition: template
            value_template: "{{ states.light | selectattr('state', 'eq', 'on') |\n\
              \   rejectattr('state', 'in', ['unavailable', 'unknown']) |\n   list\
              \ | count > 0 }}\n"
          sequence:
          - alias: Lichter ausschalten
            action: light.turn_off
            data:
              entity_id: "{{ states.light | selectattr('state', 'eq', 'on') |\n  \
                \ rejectattr('state', 'in', ['unavailable', 'unknown']) |\n   map(attribute='entity_id')\
                \ | join(', ') }}\n"
      - alias: Standard-Steckdosen ausschalten
        action: switch.turn_off
        target:
          entity_id:
          - switch.steckdose_avr
          - switch.wohnzimmer_steckdose
          - switch.flur_licht
          - switch.arbeitszimmer_steckdose
          - switch.steckdose_kuechengeraete
          - switch.kuchengerate
          - switch.steckdose_kinderzimmer
          - switch.schlafzimmer_tv_steckdose
          - switch.steckdose_arbeitszimmer
        data: {}
      - alias: Trockner ausschalten wenn im Aus-Zustand
        if:
        - condition: state
          entity_id: input_select.trockner
          state: Aus
        then:
        - action: switch.turn_off
          target:
            entity_id: switch.trockner
          data: {}
      - alias: Waschmaschine ausschalten wenn im Aus-Zustand
        if:
        - condition: state
          entity_id: input_select.waschmaschine
          state: Aus
        then:
        - action: switch.turn_off
          target:
            entity_id: switch.steckdose_waschmaschine
          data: {}
      - alias: Robbi starten wenn noch nicht gelaufen
        if:
        - condition: state
          entity_id: input_boolean.robbi_lief_heute_bereits
          state: 'off'
        - condition: template
          value_template: '{{ states(''vacuum.robbi_2'') not in [''unknown'', ''unavailable'',
            ''cleaning'', ''returning''] }}

            '
        then:
        - action: vacuum.start
          target:
            entity_id: vacuum.robbi_2
          data: {}
      - alias: HomePods stoppen
        action: media_player.media_stop
        target:
          entity_id: media_player.homepods
        data: {}
      - alias: Benachrichtigung senden
        action: notify.family
        data:
          title: Alle sind weg (kurz)
          message: Viel Spaß, wo auch immer ihr seid.
      - alias: Türe abschließen wenn offen
        if:
        - condition: state
          entity_id: lock.smart_lock_pro
          state: unlocked
        then:
        - action: lock.lock
          target:
            entity_id: lock.smart_lock_pro
          data: {}
      - alias: Klimaanlage ausschalten wenn an
        if:
        - condition: state
          entity_id: climate.ac
          state: 'on'
        then:
        - action: climate.turn_off
          target:
            entity_id: climate.ac
          data: {}
    - alias: Alle da - Willkommensmodus
      conditions:
      - condition: trigger
        id: alle-da
      sequence:
      - alias: Türe aufschließen wenn abgeschlossen
        if:
        - condition: state
          entity_id: lock.smart_lock_pro
          state: locked
        then:
        - action: lock.unlock
          target:
            entity_id: lock.smart_lock_pro
          data: {}
      - alias: Werktag-Musik kurz aktivieren (Trigger für andere Automationen)
        action: input_boolean.turn_on
        target:
          entity_id: input_boolean.werktag_musik
        data: {}
      - delay: 00:00:05
      - alias: Werktag-Musik wieder deaktivieren
        action: input_boolean.turn_off
        target:
          entity_id: input_boolean.werktag_musik
        data: {}
      - delay: 00:01:00
      - alias: Wichtige Steckdosen wieder einschalten
        action: switch.turn_on
        target:
          entity_id:
          - switch.wohnzimmer_steckdose
          - switch.arbeitszimmer_steckdose
          - switch.kuchengerate
          - switch.steckdose_kinderzimmer
          - switch.schlafzimmer_tv_steckdose
          - switch.steckdose_arbeitszimmer
        data: {}
    - alias: Alle weg (lange Abwesenheit) - Tiefschlafmodus
      conditions:
      - condition: trigger
        id: alle-weg-lang
      - alias: Kein Gast-Modus aktiv
        condition: state
        entity_id: input_boolean.guest_or_away
        state: 'off'
      - condition: template
        value_template: "{{ has_value('input_boolean.guest_or_away') }}"
      sequence:
      - alias: Alle Lichter ausschalten (auch wenn Template leer)
        action: light.turn_off
        target:
          entity_id: "{% set lights_on = states.light | selectattr('state','eq','on')\
            \ |\n   map(attribute='entity_id') | list %}\n{{ lights_on if lights_on\
            \ | length > 0 else ['light.dummy'] }}\n"
        data: {}
      - alias: Alle Steckdosen ausschalten (lang)
        action: switch.turn_off
        target:
          entity_id:
          - switch.steckdose_avr
          - switch.wohnzimmer_steckdose
          - switch.flur_licht
          - switch.arbeitszimmer_steckdose
          - switch.steckdose_kuechengeraete
          - switch.steckdose_waschmaschine
          - switch.trockner
          - switch.kuchengerate
          - switch.steckdose_kinderzimmer
          - switch.schlafzimmer_tv_steckdose
          - switch.steckdose_arbeitszimmer
        data: {}
      - alias: Türe abschließen wenn offen
        if:
        - condition: state
          entity_id: lock.smart_lock_pro
          state: unlocked
        then:
        - action: lock.lock
          target:
            entity_id: lock.smart_lock_pro
          data: {}
      - alias: Benachrichtigung lange Abwesenheit
        action: notify.family
        data:
          title: Alle sind weg (lang)
          message: Viel Spaß, wo auch immer ihr seid.
      - alias: Klimaanlage ausschalten wenn an
        if:
        - condition: state
          entity_id: climate.ac
          state: 'on'
        then:
        - action: climate.turn_off
          target:
            entity_id: climate.ac
          data: {}
    - alias: Timer abgelaufen - Gast-Modus beenden
      conditions:
      - condition: trigger
        id: timer
      sequence:
      - alias: Gast-Modus deaktivieren
        action: input_boolean.turn_off
        target:
          entity_id: input_boolean.guest_or_away
        data: {}
      - alias: Türe automatisch abschließen
        action: lock.lock
        target:
          entity_id: lock.smart_lock_pro
        data: {}
  mode: single
  max_exceeded: silent
  variables:
    lock_timeout: 01:00:00
    guest_mode_timeout: '12:00:00'
    timestamp: '{{ now() }}'
