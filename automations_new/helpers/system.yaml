# Helpers - System.Yaml
# Generated by automation splitter - 4 automations
# Part of Home Assistant configuration

- id: '1662367427590'
  alias: Helper » After HA Restart
  description: Lädt Personeninformationen beim Neustart und aktualisiert MediaPlayer
    stündlich
  triggers:
  - event: start
    trigger: homeassistant
  - hours: '*'
    minutes: 0
    trigger: time_pattern
  conditions: []
  actions:
  - action: person.reload
  - target:
      entity_id:
      - media_player.appletv
      - media_player.wohnzimmer
      - media_player.denon_avr_x3200w
      - media_player.homepod_badezimmer
      - media_player.homepod_kinderzimmer
      - media_player.homepod_kuche
      - media_player.homepod_schlafzimmer
      - media_player.homepod_wohnzimmer
      - media_player.homepod_arbeitszimmer
      - media_player.smarttv_4k
    action: homeassistant.update_entity
  mode: single
- id: '1719869864261'
  alias: Helper Restart Home Assistant
  description: Neustart von Home Assistant jeden Sonntag um 00:05 Uhr
  triggers:
  - at: 00:05:00
    trigger: time
  conditions:
  - condition: time
    weekday:
    - sun
  actions:
  - action: homeassistant.restart
    data: {}
  mode: single
- id: '1725023601709'
  alias: Helper » Restart Fritzbox
  description: Startet Fritzbox und Repeater jeden Tag um 5 Uhr neu
  triggers:
  - at: 05:00:00
    trigger: time
  conditions:
  - condition: state
    entity_id: input_boolean.arbeit
    state: 'off'
  actions:
  - action: button.press
    data: {}
    target:
      entity_id: button.fritz_box_7590_ax_restart
  - delay:
      minutes: 2
  - action: button.press
    data: {}
    target:
      entity_id: button.fritz_repeater_2400_restart
  - delay:
      minutes: 2
  - action: button.press
    data: {}
    target:
      entity_id: button.fritz_repeater_1200_ax_restart
  mode: single
- id: '1744630508158'
  alias: Helper » Media Player nur wenn inaktiv aktualisieren
  description: 'Führt alle 30 Minuten zwischen 06:00 und 22:00 Uhr ein Update für
    alle media_player-Entitäten durch, aber nur wenn sie nicht aktiv sind.

    '
  triggers:
  - minutes: /30
    trigger: time_pattern
  conditions:
  - condition: time
    after: 06:00:00
    before: '22:00:00'
  variables:
    media_players:
      - media_player.apple_tv
      - media_player.denon_avr_x3200w
      - media_player.homepod_badezimmer
      - media_player.homepod_kinderzimmer
      - media_player.homepod_kuche
      - media_player.homepod_schlafzimmer
      - media_player.homepod_wohnzimmer
      - media_player.homepod_arbeitszimmer
      - media_player.smarttv_4k
      - media_player.wohnzimmer
    idle_players: >
      {{ media_players | select('has_value') | reject('is_state', 'playing') | list }}
  actions:
  - repeat:
      count: "{{ idle_players | length }}"
      sequence:
      - condition: template
        value_template: "{{ repeat.index <= (idle_players | length) }}"
      - action: homeassistant.update_entity
        target:
          entity_id: "{{ idle_players[repeat.index - 1] }}"
  mode: single
