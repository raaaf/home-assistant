# Notifications - Alerts.Yaml
# Generated by automation splitter - 5 automations
# Part of Home Assistant configuration

- id: '1663078632677'
  alias: Notification » Es hat geklingelt
  description: Benachrichtigt bei Türklingel und lässt Lichter drei Mal blinken
  triggers:
  - entity_id: binary_sensor.nuki_haustur_ring_action
    from: 'off'
    to: 'on'
    trigger: state
  conditions:
  - condition: template
    value_template: " {% set last = state_attr('automation.notification_es_hat_geklingelt',\
      \ 'last_triggered') %}\n    {{ last is none or (now() - last).total_seconds()\
      \ > 30 }}"
  actions:
  - data:
      title: Haustür Klingel
      message: '{{ now().strftime(''%H:%M Uhr, %d.%m.%Y'') }}'
      data:
        push:
          interruption-level: critical
    action: notify.family
  mode: single
- id: '1692865362999'
  alias: Notification » Wasserspender
  description: Überwacht Wasserspender und benachrichtigt bei leerem Tank, Pumpenprobleme
    oder Reinigungsbedarf
  triggers:
  - trigger: state
    entity_id: binary_sensor.mmgg_wi11_7a1c_no_water_flag
    to: 'on'
    id: wasser-leer
  - trigger: state
    entity_id: binary_sensor.mmgg_wi11_7a1c_pump_block_flag
    to: 'on'
    id: pumpe
  - entity_id:
    - sensor.mmgg_wi11_7a1c_remain_clean_time
    from: '2'
    to: '1'
    id: clean
    trigger: state
  conditions:
  - condition: template
    value_template: " {% set last = state_attr('automation.notification_wasserspender',\
      \ 'last_triggered') %}\n    {{ last is none or (now() - last).total_seconds()\
      \ > 12 * 60 * 60 }}"
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - wasser-leer
      sequence:
      - action: script.turn_on
        target:
          entity_id: script.xtodo_create_todo
        data:
          variables:
            todo: Wasserspender » Braucht Wasser
        continue_on_error: true
    - conditions:
      - condition: trigger
        id:
        - pumpe
      sequence:
      - action: script.turn_on
        target:
          entity_id: script.xtodo_create_todo
        data:
          variables:
            todo: Wasserspender » Pumpe prüfen
        continue_on_error: true
    - conditions:
      - condition: trigger
        id:
        - clean
      sequence:
      - action: script.turn_on
        target:
          entity_id: script.xtodo_create_todo
        data:
          variables:
            todo: Wasserspender » Reinigen
        continue_on_error: true
  mode: single
- id: '1700477276036'
  alias: Notification » Season Change
  description: Sendet Benachrichtigung beim Jahreszeitenwechsel
  triggers:
  - entity_id: sensor.season
    to: spring
    id: Frühling
    trigger: state
  - entity_id: sensor.season
    to: summer
    id: Sommer
    trigger: state
  - entity_id: sensor.season
    to: autumn
    id: Herbst
    trigger: state
  - entity_id: sensor.season
    to: winter
    id: Winter
    trigger: state
  conditions: []
  actions:
  - data:
      title: 🎉 Wir haben jetzt {{ trigger.id }}!
      message: Yippey! Die neue Jahreszeit hat begonnen.
    action: notify.family
  mode: single
  max_exceeded: silent
- id: '1714059235372'
  alias: Notification » CO2 zu hoch
  description: Benachrichtigt wenn CO2-Wert über 1800 ppm steigt
  triggers:
  - entity_id:
    - sensor.qingping_air_monitor_lite_co2_carbon_dioxide
    above: 1800
    for:
      hours: 0
      minutes: 5
      seconds: 0
    trigger: numeric_state
  conditions:
  - condition: template
    value_template: "{{ states('sensor.qingping_air_monitor_lite_co2_carbon_dioxide') not in ['unknown', 'unavailable'] }}"
  - condition: template
    value_template: " {% set last = state_attr('automation.notification_co2_zu_hoch',\
      \ 'last_triggered') %}\n    {{ last is none or (now() - last).total_seconds()\
      \ > 30 * 60 }}"
  actions:
  - data:
      message: Der Wert liegt aktuell bei {{ states('sensor.qingping_air_monitor_lite_co2_carbon_dioxide') | int(0)
        }} ppm!
      title: CO2 zu hoch - Fenster auf im Arbeitszimmer
      data:
        push:
          interruption-level: critical
    action: notify.family
  mode: single
- id: '1715850119149'
  alias: Notifications » Temperatur Aussen
  description: Benachrichtigt wenn Außentemperatur 30°C übersteigt
  triggers:
  - trigger: numeric_state
    entity_id: sensor.temperatur_aussen
    above: 30
    for:
      hours: 0
      minutes: 0
      seconds: 30
  conditions:
  - condition: template
    value_template: "{{ states('sensor.temperatur_aussen') not in ['unknown', 'unavailable'] }}"
  - condition: template
    value_template: " {% set last = state_attr('automation.notifications_temperatur_aussen',\
      \ 'last_triggered') %}\n    {{ last is none or (now() - last).total_seconds()\
      \ > 12 * 60 * 60 }}"
  actions:
  - metadata: {}
    data:
      title: Aussentemperatur erreicht 30°!
      message: Sonnenaufgang » {{ states('sensor.temperatur_aussen_sonnenaufgang_temperature') | float(0) | round(1) }}°C
        und Sonnenuntergang » {{ states('sensor.temperatur_aussen_sonnenuntergang_temperature') | float(0) | round(1) }}°C!
    action: notify.family
  mode: single
