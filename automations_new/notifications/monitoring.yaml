# Notifications - Monitoring.Yaml
# Generated by automation splitter - 5 automations
# Part of Home Assistant configuration

- id: '1645110903677'
  alias: Notification ¬ª Es gibt nicht erreichbare Ger√§te
  description: Sendet werktags um 10 Uhr eine E-Mail bei nicht erreichbaren Ger√§ten
  use_blueprint:
    path: gmlupatelli/unavailable_entities_notification.yaml
    input:
      time: '10:00:00'
      actions:
      - action: notify.rafael_mail
        data:
          title: üëâ Nicht erreichbare Ger√§te
          message: '{{entities}}'
      saturday_enabled: false
      sunday_enabled: false
      tuesday_enabled: false
      thursday_enabled: false
      monday_enabled: true
      friday_enabled: true
- id: '1665868733806'
  alias: Notification ¬ª Luftfeuchtigkeit 15:00
  description: Sendet t√§gliche Benachrichtigung bei Luftfeuchtigkeit √ºber 60%
  use_blueprint:
    path: migsun/high-humidity-level-detection-notification-for-all-humidity-sensors.yaml
    input:
      threshold: 60
      time: '15:00:00'
      actions:
      - action: notify.family
        data:
          title: üëâ Luftfeuchtigkeit
          message: '{{sensors}}'
      exclude:
        entity_id:
        - sensor.temperatur_aussen_sonnenaufgang_humidity
        - sensor.temperatur_aussen_sonnenuntergang_humidity
- id: '1726065861905'
  alias: Notifications ¬ª Low Battery
  description: Benachrichtigt bei niedrigem Batteriestand (unter 10%) von Ger√§ten
  use_blueprint:
    path: Blackshome/low-battery-notifications-and-actions.yaml
    input:
      include_time: time_enabled
      time: '10:00:00'
      include_persistent_notification: enable_persistent_notification
      battery_level: 10
- id: '1754479299582'
  alias: Watchman Monitor - Combined
  description: Run scheduled checks and alert on sensor issues
  triggers:
  - at: 09:00:00
    id: scheduled_morning
    trigger: time
  - at: '16:00:00'
    id: scheduled_evening
    trigger: time
  - entity_id: sensor.watchman_missing_entities
    attribute: entities
    id: sensor_change
    trigger: state
    enabled: false
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - scheduled_morning
        - scheduled_evening
      sequence:
      - action: system_log.write
        data:
          message: 'Watchman: Starting scheduled report'
          level: info
      - action: watchman.report
        data:
          send_notification: true
          parse_config: true
        continue_on_error: true
      - action: system_log.write
        data:
          message: 'Watchman: Report completed'
          level: info
    - conditions:
      - condition: trigger
        id: sensor_change
      - condition: template
        value_template: '{{ states(''sensor.watchman_missing_entities'') | int > 0
          }}'
      sequence:
      - action: notify.mobile_app_iphone_rafael
        data:
          title: ‚ö†Ô∏è Sensor Issues Detected
          message: '{{ states(''sensor.watchman_missing_entities'') }} entities are
            missing/unavailable. Check Watchman report for details.

            '
          data:
            tag: watchman_alert
            group: sensor_health
  mode: single
- id: '1754557053144'
  alias: Helper ¬ª Fix Unknown Devices
  description: Versucht Ger√§te mit 'unknown' Status zu reaktivieren
  triggers:
  - minutes: /30
    trigger: time_pattern
  - event: start
    trigger: homeassistant
  conditions: []
  actions:
  - variables:
      unknown_devices: "{{ states | selectattr('state', 'eq', 'unknown') \n   | rejectattr('domain',\
        \ 'in', ['automation', 'script', 'scene']) \n   | list }}\n"
      unknown_count: '{{ unknown_devices | length }}'
  - data:
      message: Found {{ unknown_count }} devices with unknown state
      level: info
    action: system_log.write
  - if:
    - condition: template
      value_template: '{{ unknown_devices | selectattr(''entity_id'', ''match'', ''.*_motion_.*|.*_kontaktsensor_.*'')
        | list | length > 0 }}

        '
    then:
    - data:
        duration: 0
      action: zha.permit
    - delay: 00:00:02
    - target:
        entity_id: "{{ unknown_devices \n   | selectattr('entity_id', 'match', '.*_motion_.*|.*_kontaktsensor_.*')\
          \ \n   | map(attribute='entity_id') \n   | list }}\n   \n"
      action: homeassistant.update_entity
  - if:
    - condition: template
      value_template: '{{ unknown_devices | selectattr(''entity_id'', ''match'', ''light\.alle_.*'')
        | list | length > 0 }}

        '
    then:
    - action: group.reload
    - delay: 00:00:02
    - target:
        entity_id: "{{ unknown_devices \n   | selectattr('entity_id', 'match', 'light\\\
          .alle_.*') \n   | map(attribute='entity_id') \n   | list }}\n"
      data:
        brightness: 1
      action: light.turn_on
    - delay: 00:00:01
    - target:
        entity_id: "{{ unknown_devices \n   | selectattr('entity_id', 'match', 'light\\\
          .alle_.*') \n   | map(attribute='entity_id') \n   | list }}\n   \n"
      action: light.turn_off
  - if:
    - condition: template
      value_template: '{{ unknown_devices | selectattr(''domain'', ''eq'', ''cover'')
        | list | length > 0 }}

        '
    then:
    - target:
        entity_id: "{{ unknown_devices \n   | selectattr('domain', 'eq', 'cover')\
          \ \n   | map(attribute='entity_id') \n   | list }}\n"
      continue_on_error: true
      action: cover.stop_cover
    - target:
        entity_id: "{{ unknown_devices \n   | selectattr('domain', 'eq', 'cover')\
          \ \n   | map(attribute='entity_id') \n   | list }}\n   \n"
      action: homeassistant.update_entity
  - if:
    - condition: state
      entity_id: sensor.luftfeuchtigkeit_aussen
      state: unknown
    then:
    - data:
        message: Au√üensensor offline - pr√ºfe Batterie!
        level: warning
      action: system_log.write
    - parallel:
        # TTS Ansage √ºber HomePods
        - action: script.hausgeraete_ansage
          data:
            message: "Der Au√üensensor ist offline. Bitte die Batterie pr√ºfen"
            priority: "normal"
        
        # Mobile Benachrichtigung
        - action: notify.mobile_app_iphone_rafael
          data:
            title: ‚ö†Ô∏è Au√üensensor offline
            message: Der Au√üensensor liefert keine Daten. Batterie pr√ºfen!
        
        # Persistent Notification als Backup
        - action: persistent_notification.create
          data:
            notification_id: "aussensensor_offline"
            title: "üå°Ô∏è Au√üensensor offline"
            message: "Der Au√üensensor liefert keine Daten. Batterie pr√ºfen!"
  mode: single
