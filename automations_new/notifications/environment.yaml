# Notifications - Environment.Yaml
# Generated by automation splitter - 2 automations
# Part of Home Assistant configuration

- id: '1697018634962'
  alias: Notifications » Heizung > 4 Stunden
  description: Benachrichtigt wenn Heizungen länger als 4 Stunden aktiv sind
  triggers:
  - entity_id: sensor.heizung_arbeitszimmer_an
    above: 4
    trigger: numeric_state
  - entity_id: sensor.heizung_kinderzimmer_an
    above: 4
    trigger: numeric_state
  - entity_id: sensor.heizung_badezimmer_an
    above: 4
    trigger: numeric_state
  - entity_id: sensor.heizung_flur_an
    above: 4
    trigger: numeric_state
  - entity_id: sensor.heizung_wohnzimmer_an
    above: 4
    trigger: numeric_state
  conditions:
  - condition: template
    value_template: >
      {% set last = state_attr('automation.notifications_heizung_4_stunden', 'last_triggered') %}
      {{ last is none or (now() - last).total_seconds() > 12 * 60 * 60 }}
  actions:
  - variables:
      room_name_raw: "{{ trigger.entity_id | regex_replace('^sensor.heizung_', '') | regex_replace('_an$', '') }}"
      room_name_display: "{{ room_name_raw | replace('_', ' ') | title }}"
      heating_hours: "{{ trigger.to_state.state }}"
  - parallel:
      # Mobile Benachrichtigung
      - action: notify.rafael
        data:
          title: 'Heizung: {{ room_name_display }}'
          message: 'Seit mehr als 4 Stunden aktiv (aktuell {{ heating_hours }} h).'
          data:
            push:
              interruption-level: critical
        continue_on_error: true
      
      # Email notification
      - action: notify.rafael_mail
        data:
          title: "Heizung läuft zu lange - {{ room_name_display }}"
          message: |
            Heizung läuft zu lange

            Raum: {{ room_name_display }}
            Laufzeit: {{ heating_hours }} Stunden

            Die Heizung im {{ room_name_display }} läuft seit mehr als 4 Stunden. Bitte überprüfe die Einstellungen oder ob eventuell ein Fenster geöffnet ist.
        continue_on_error: true
  mode: single
- id: '1738322846270'
  alias: Notification » Stromverbrauch gestern
  description: 'Erstellt eine persistente Benachrichtigung mit dem Stromverbrauch,
    der Solarproduktion und den Kosten des Vortages

    '
  triggers:
  - at: 00:05:00
    trigger: time
  conditions:
  - condition: template
    value_template: >
      {{ states('sensor.solarproduktion_gestern') not in ['unknown', 'unavailable'] }}
  actions:
  - variables:
      # Check if we have historical data or need to use current values
      has_historical_data: >-
        {{ state_attr('sensor.taglicher_netzbezug','last_period') is not none 
           and state_attr('sensor.taglicher_netzbezug','last_period') | float(0) > 0 }}
      
      verbrauch_netto: >-
        {% set last = state_attr('sensor.taglicher_netzbezug','last_period') %}
        {% if last is not none and last | float(0) > 0 %}
          {{ last | float(0) | round(1) }}
        {% else %}
          {{ states('sensor.taglicher_netzbezug') | float(0) | round(1) }}
        {% endif %}
      
      solarproduktion_gestern: >-
        {{ states('sensor.solarproduktion_gestern') | float(0) | round(1) }}
      
      verbrauch_brutto: '{{ (verbrauch_netto + solarproduktion_gestern) | round(1) }}'
      strompreis: >-
        {% if states('sensor.butzabatza_electricity_price') not in ['unknown', 'unavailable'] %}
          {{ states('sensor.butzabatza_electricity_price') | float(0.30) }}
        {% else %}
          0.30
        {% endif %}
      kosten_ohne_solar: '{{ (verbrauch_brutto * strompreis) | round(2) }}'
      ersparnis_gestern: '{{ (solarproduktion_gestern * strompreis) | round(2) }}'
      kosten_nach_solar: '{{ (verbrauch_netto * strompreis) | round(2) }}'
      datum_gestern: '{{ (now() - timedelta(days=1)).strftime(''%d.%m.%Y'') }}'
      
      # Eigenverbrauchsquote berechnen (aligned with sensor.pv_eigenverbrauch_quote)
      eigenverbrauch_quote: >-
        {% set sensor_val = states('sensor.pv_eigenverbrauch_quote') %}
        {% if sensor_val not in ['unknown', 'unavailable', ''] %}
          {{ sensor_val | float(0) | round(0) }}
        {% else %}
          {% set solar = solarproduktion_gestern | float(0) %}
          {% set export = state_attr('sensor.tagliche_einspeisung', 'last_period') | float(0) if state_attr('sensor.tagliche_einspeisung', 'last_period') is not none else 0 %}
          {% if solar > 0 %}
            {{ ((1 - (export / solar)) * 100) | round(0) }}
          {% else %}
            0
          {% endif %}
        {% endif %}

      # Anteil Solar am Verbrauch (Solar / Gesamtverbrauch)
      solaranteil_verbrauch: >-
        {% set solar = solarproduktion_gestern | float(0) %}
        {% set brutto = verbrauch_brutto | float(0) %}
        {% if solar > 0 and brutto > 0 %}
          {{ ((solar / brutto) * 100) | round(0) }}
        {% else %}
          0
        {% endif %}
  - data:
      title: Energie-Bilanz {{ datum_gestern }}{{ ' (Test)' if not has_historical_data else '' }}
      message: >-
        {% if not has_historical_data %}WARNUNG: Aktuelle Werte - Testmodus

        {% endif %}VERBRAUCH:
        Gesamt: {{ verbrauch_brutto }} kWh
        Netzbezug: {{ verbrauch_netto }} kWh

        SOLAR:
        Produktion: {{ solarproduktion_gestern }} kWh
        PV-Eigenverbrauchsquote: {{ eigenverbrauch_quote }}%
        Anteil Solar am Verbrauch: {{ solaranteil_verbrauch }}%

        KOSTEN:
        Tatsächlich: {{ kosten_nach_solar }} Euro
        Ersparnis: {{ ersparnis_gestern }} Euro
    action: notify.rafael_mail
    data:
      title: "Energie-Bilanz {{ datum_gestern }}{{ ' (Test)' if not has_historical_data else '' }}"
      message: |
        Energie-Bilanz {{ datum_gestern }}{{ ' (Test)' if not has_historical_data else '' }}

        {% if not has_historical_data %}WARNUNG: Aktuelle Werte - Testmodus
        {% endif %}

        VERBRAUCH:
        - Gesamt: {{ verbrauch_brutto }} kWh
        - Netzbezug: {{ verbrauch_netto }} kWh

        SOLAR:
        - Produktion: {{ solarproduktion_gestern }} kWh
        - PV-Eigenverbrauchsquote: {{ eigenverbrauch_quote }}%
        - Anteil Solar am Verbrauch: {{ solaranteil_verbrauch }}%

        KOSTEN:
        - Tatsächlich: {{ kosten_nach_solar }} Euro
        - Ersparnis: {{ ersparnis_gestern }} Euro
  - data:
      message: >-
        Tagesstatistik {{ datum_gestern }}: 
        Verbrauch {{ verbrauch_brutto }} kWh (Netto: {{ verbrauch_netto }} kWh), 
        Solar {{ solarproduktion_gestern }} kWh, 
        PV-Eigenverbrauchsquote {{ eigenverbrauch_quote }}%, 
        Anteil Solar am Verbrauch {{ solaranteil_verbrauch }}%, 
        Kosten {{ kosten_nach_solar }} € (Ersparnis: {{ ersparnis_gestern }} €)
      name: Energie-Bilanz
      domain: automation
    action: logbook.log
  mode: single
