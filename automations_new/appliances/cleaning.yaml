# Appliances - Cleaning.Yaml
# Generated by automation splitter - 2 automations
# Part of Home Assistant configuration

- id: '1692862614295'
  alias: "Benachrichtigung ¬ª Robbi Wartung"
  description: "√úberwacht Staubsauger-Roboter und erstellt Wartungsaufgaben (Filter, B√ºrsten, Sensoren) mit TTS-Ansagen bei kritischen Werten"
  triggers:
  - trigger: template
    value_template: >-
      {% set level = state_attr('vacuum.robbi_2', 'brush_cleaner.brush_life_level') %}
      {{ level is not none and level | int(100) < 10 }}
    id: hauptbueste
  - trigger: template
    value_template: >-
      {% set level = state_attr('vacuum.robbi_2', 'brush_life_level-10-2') %}
      {{ level is not none and level | int(100) < 10 }}
    id: seitenbueste
  - trigger: template
    value_template: >-
      {% set level = state_attr('vacuum.robbi_2', 'filter.filter_life_level') %}
      {{ level is not none and level | int(100) < 10 }}
    id: filter
  - trigger: template
    value_template: >-
      {% set props = state_attr('vacuum.robbi_2', 'props') %}
      {{ props is not none and 
         props.get('sensor_dirty_time', 9999) | int(9999) < 5000 }}
    id: sensoren
  conditions:
  - alias: "Nicht √∂fter als alle 12 Stunden triggern"
    condition: template
    value_template: >-
      {% set last = state_attr('automation.benachrichtigung_robbi_wartung', 'last_triggered') %}
      {{ last is none or (now() - last).total_seconds() > 43200 }}
  - alias: "Robbi ist verf√ºgbar (nicht unbekannt/unavailable)"
    condition: template
    value_template: >-
      {{ states('vacuum.robbi_2') not in ['unknown', 'unavailable'] }}
  actions:
  - choose:
    - alias: "Hauptb√ºrste wechseln"
      conditions:
      - condition: trigger
        id: hauptbueste
      sequence:
      - parallel:
        # Persistent notification als Aufgabe
        - action: persistent_notification.create
          data:
            notification_id: "robbi_hauptbueste"
            title: "ü§ñ Robbi Wartung"
            message: >-
              Hauptb√ºrste wechseln ({{ 
                state_attr('vacuum.robbi_2', 'brush_cleaner.brush_life_level') | int(0) 
              }}% verbleibend)
        # Mobile Benachrichtigung bei kritischem Wert (<5%)
        - if:
            - condition: template
              value_template: >-
                {{ state_attr('vacuum.robbi_2', 'brush_cleaner.brush_life_level') | int(100) < 5 }}
          then:
            - parallel:
                - action: notify.rafael
                  data:
                    title: "ü§ñ Robbi Wartung"
                    message: "Hauptb√ºrste kritisch ‚Äì bitte wechseln"
                - action: notify.alex
                  data:
                    title: "ü§ñ Robbi Wartung"
                    message: "Hauptb√ºrste kritisch ‚Äì bitte wechseln"
    
    - alias: "Seitenb√ºrste wechseln"
      conditions:
      - condition: trigger
        id: seitenbueste
      sequence:
      - parallel:
        # Persistent notification als Aufgabe
        - action: persistent_notification.create
          data:
            notification_id: "robbi_seitenbueste"
            title: "ü§ñ Robbi Wartung"
            message: >-
              Seitenb√ºrste wechseln ({{ 
                state_attr('vacuum.robbi_2', 'brush_life_level-10-2') | int(0) 
              }}% verbleibend)
        # Mobile Benachrichtigung bei kritischem Wert (<5%)
        - if:
            - condition: template
              value_template: >-
                {{ state_attr('vacuum.robbi_2', 'brush_life_level-10-2') | int(100) < 5 }}
          then:
            - parallel:
                - action: notify.rafael
                  data:
                    title: "ü§ñ Robbi Wartung"
                    message: "Seitenb√ºrste kritisch ‚Äì bitte wechseln"
                - action: notify.alex
                  data:
                    title: "ü§ñ Robbi Wartung"
                    message: "Seitenb√ºrste kritisch ‚Äì bitte wechseln"
    
    - alias: "Filter wechseln"
      conditions:
      - condition: trigger
        id: filter
      sequence:
      - parallel:
        # Persistent notification als Aufgabe
        - action: persistent_notification.create
          data:
            notification_id: "robbi_filter"
            title: "ü§ñ Robbi Wartung"
            message: >-
              Filter wechseln ({{ 
                state_attr('vacuum.robbi_2', 'filter.filter_life_level') | int(0) 
              }}% verbleibend)
        # Mobile Benachrichtigung bei kritischem Wert (<5%)
        - if:
            - condition: template
              value_template: >-
                {{ state_attr('vacuum.robbi_2', 'filter.filter_life_level') | int(100) < 5 }}
          then:
            - parallel:
                - action: notify.rafael
                  data:
                    title: "ü§ñ Robbi Wartung"
                    message: "Filter kritisch ‚Äì bitte wechseln"
                - action: notify.alex
                  data:
                    title: "ü§ñ Robbi Wartung"
                    message: "Filter kritisch ‚Äì bitte wechseln"
    
    - alias: "Sensoren reinigen"
      conditions:
      - condition: trigger
        id: sensoren
      sequence:
      - parallel:
        # Persistent notification als Aufgabe
        - action: persistent_notification.create
          data:
            notification_id: "robbi_sensoren"
            title: "ü§ñ Robbi Wartung"
            message: >-
              Sensoren reinigen ({{ 
                state_attr('vacuum.robbi_2', 'props').get('sensor_dirty_time', 'unbekannt') 
              }} verbleibend)
        # Mobile Benachrichtigung f√ºr Sensoren-Reinigung
        - parallel:
            - action: notify.rafael
              data:
                title: "ü§ñ Robbi Wartung"
                message: "Sensoren reinigen"
            - action: notify.alex
              data:
                title: "ü§ñ Robbi Wartung"
                message: "Sensoren reinigen"
    default:
    # Fallback wenn unbekannter Trigger
    - action: persistent_notification.create
      data:
        notification_id: "robbi_wartung_error"
        title: "‚ö†Ô∏è Robbi Automation Fehler"
        message: "Unbekannter Wartungstrigger ausgel√∂st"
  mode: single
- id: '1692862723924'
  alias: "Benachrichtigung ¬ª Luftreiniger Filter"
  description: "Erstellt Wartungsaufgabe wenn Luftreiniger-Filter unter 10% Lebensdauer mit TTS-Ansage bei kritischen Werten"
  triggers:
  - trigger: numeric_state
    entity_id: sensor.zhimi_vb4_bce4_filter_life_level
    below: 10
    id: filter_wartung
  conditions:
  - alias: "Nicht √∂fter als alle 12 Stunden triggern"
    condition: template
    value_template: >-
      {% set last = state_attr('automation.benachrichtigung_luftreiniger_filter', 'last_triggered') %}
      {{ last is none or (now() - last).total_seconds() > 43200 }}
  - alias: "Luftreiniger ist verf√ºgbar"
    condition: template
    value_template: >-
      {{ states('sensor.zhimi_vb4_bce4_filter_life_level') not in ['unknown', 'unavailable'] }}
  actions:
  - parallel:
      # Persistent notification als Aufgabe
      - action: persistent_notification.create
        data:
          notification_id: "luftreiniger_filter"
          title: "üå¨Ô∏è Luftreiniger Wartung"
          message: >-
            Filter wechseln ({{ 
              states('sensor.zhimi_vb4_bce4_filter_life_level') | int(0) 
            }}% verbleibend)

      # Mobile Benachrichtigung bei kritischem Wert (<5%)
      - if:
          - condition: template
            value_template: >-
              {{ states('sensor.zhimi_vb4_bce4_filter_life_level') | int(100) < 5 }}
        then:
          - parallel:
              - action: notify.rafael
                data:
                  title: "üå¨Ô∏è Luftreiniger Wartung"
                  message: "Filter kritisch ‚Äì bitte wechseln"
              - action: notify.alex
                data:
                  title: "üå¨Ô∏è Luftreiniger Wartung"
                  message: "Filter kritisch ‚Äì bitte wechseln"
  mode: single
