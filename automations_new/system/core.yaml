# System - Core.Yaml
# Generated by automation splitter - 2 automations
# Part of Home Assistant configuration

- id: '1642085317177'
  alias: Helpers ¬ª Fenster / T√ºren
  description: Intelligente Warnanzeige f√ºr offene Fenster/T√ºren mit Eskalation, Wetterber√ºcksichtigung
    und adaptiver Beleuchtung
  mode: restart
  max_exceeded: silent
  triggers:
  - trigger: state
    entity_id: binary_sensor.fenster_tueren
    to: 'on'
    for:
      hours: 0
      minutes: 1
      seconds: 0
    id: open
  - trigger: state
    entity_id: binary_sensor.fenster_tueren
    to: 'off'
    id: closed
  - trigger: state
    entity_id: binary_sensor.fenster_tueren
    to: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
    id: escalation
  - trigger: state
    entity_id: input_boolean.alle_sind_weg
    to: 'on'
    id: leaving
  conditions: []
  actions:
  - variables:
      open_elements: "{{ expand(state_attr('binary_sensor.fenster_tueren', 'entity_id'))\
        \ \n   | selectattr('state', 'in', ['on', 'open']) \n   | map(attribute='name')\
        \ | join(', ') | default('Unbekannt', true) }}\n"
      open_duration_minutes: '{{ ((now() - states.binary_sensor.fenster_tueren.last_changed).total_seconds()
        / 60) | round(1) }}

        '
      is_cold_outside: '{{ states(''sensor.temperatur_aussen'') | float(20) < 5 }}

        '
      is_bad_weather: "{{ states('weather.fuerth_bayern') in ['rainy', 'snowy', 'windy']\
        \ or \n   states('sensor.luftfeuchtigkeit_aussen') | float(50) > 85 }}\n"
      heating_active: '{{ is_state(''climate.schlafzimmer'', ''on'') or is_state(''climate.ac'',
        ''heat'') }}

        '
      is_night_quiet_hours: '{{ now().hour >= 22 or now().hour < 6 }}

        '
      is_critical_situation: '{{ is_cold_outside or (is_bad_weather and heating_active)
        }}

        '
      all_away: '{{ is_state(''input_boolean.alle_sind_weg'', ''on'') }}

        '
  - choose:
    - alias: Benachrichtigung beim Verlassen des Hauses
      conditions:
      - condition: trigger
        id: leaving
      - alias: Fenster/T√ºren sind offen
        condition: state
        entity_id: binary_sensor.fenster_tueren
        state: 'on'
      sequence:
      - alias: Push-Benachrichtigung beim Verlassen
        if:
        - condition: template
          value_template: '{{ has_value(''notify.family'') }}'
        then:
        - action: notify.family
          data:
            title: üè† Fenster/T√ºren noch offen!
            message: 'Beim Verlassen des Hauses: {{ open_elements }} {% if is_cold_outside
              %}(Au√üentemperatur: {{ states(''sensor.temperatur_aussen'') }}¬∞C){% endif
              %}{% if is_bad_weather %} - Schlechtes Wetter!{% endif %}'
            data:
              priority: high
              tag: fenster_tueren_verlassen
      - alias: Verlassen mit offenen Fenstern loggen
        action: logbook.log
        data:
          name: Fenster/T√ºren beim Verlassen
          message: 'Haus verlassen mit offenen Fenstern/T√ºren: {{ open_elements }}

            '
    - alias: Fenster/T√ºren offen - Adaptive Warnung aktivieren (nur wenn zuhause)
      conditions:
      - condition: trigger
        id: open
      - alias: Jemand ist zuhause
        condition: state
        entity_id: input_boolean.alle_sind_weg
        state: 'off'
      - alias: Aqara Hub ist verf√ºgbar
        condition: template
        value_template: '{{ has_value(''light.aqara_hub_lightbulb'') }}'
      - alias: Warnung auch nachts nur bei kritischen Situationen
        condition: or
        conditions:
        - condition: template
          value_template: '{{ not is_night_quiet_hours }}'
        - condition: template
          value_template: '{{ is_critical_situation }}'
      sequence:
      - alias: Adaptive Warnbeleuchtung basierend auf Situation
        action: light.turn_on
        target:
          entity_id: light.aqara_hub_lightbulb
        data:
          rgb_color: "{% if is_critical_situation %}\n  [255, 0, 255]  # Magenta bei\
            \ kritischem Wetter/K√§lte\n{% elif open_duration_minutes < 5 %}\n  [255,\
            \ 165, 0]  # Orange: 1-5 Min\n{% else %}\n  [255, 69, 0]   # Rot-Orange:\
            \ >5 Min\n{% endif %}\n"
          brightness_pct: "{% if is_critical_situation %}\n  60\n{% elif is_night_quiet_hours\
            \ %}\n  15  # Ged√§mpft nachts\n{% else %}\n  {{ min(25 + (open_duration_minutes\
            \ * 2), 50) | int }}\n{% endif %}\n"
          effect: '{{ ''color_loop'' if (is_critical_situation and heating_active)
            else ''none'' }}'
      - alias: Pulsierende Warnung bei kritischen Bedingungen
        if:
        - condition: template
          value_template: '{{ is_critical_situation }}'
        then:
        - repeat:
            count: 3
            sequence:
            - action: light.turn_on
              target:
                entity_id: light.aqara_hub_lightbulb
              data:
                brightness_pct: 80
            - delay: 00:00:01
            - action: light.turn_on
              target:
                entity_id: light.aqara_hub_lightbulb
              data:
                brightness_pct: 20
            - delay: 00:00:01
      - alias: Erste Warnung in Logbuch eintragen
        action: logbook.log
        data:
          name: Fenster/T√ºren Warnung
          message: 'Fenster/T√ºren seit 1+ Min offen - {{ ''KRITISCHE'' if is_critical_situation
            else ''Standard'' }} Warnung aktiviert. Offen: {{ open_elements }}. Bedingungen:
            Au√üentemp {{ states(''sensor.temperatur_aussen'') }}¬∞C,  Wetter: {{ states(''weather.fuerth_bayern'')
            }},  Heizung: {{ ''an'' if heating_active else ''aus'' }}

            '
    - alias: Eskalation nach 10+ Minuten (nur wenn zuhause)
      conditions:
      - condition: trigger
        id: escalation
      - alias: Jemand ist zuhause
        condition: state
        entity_id: input_boolean.alle_sind_weg
        state: 'off'
      - alias: Aqara Hub ist verf√ºgbar
        condition: template
        value_template: '{{ has_value(''light.aqara_hub_lightbulb'') }}'
      sequence:
      - alias: Intensivere Warnbeleuchtung
        action: light.turn_on
        target:
          entity_id: light.aqara_hub_lightbulb
        data:
          rgb_color:
          - 255
          - 0
          - 0
          brightness_pct: '{{ 80 if is_critical_situation else 60 }}

            '
          effect: '{{ ''color_loop'' if is_critical_situation else ''none'' }}'
      - alias: Eskalation in Logbuch eintragen
        action: logbook.log
        data:
          name: Fenster/T√ºren Eskalation
          message: 'ESKALATION: Fenster/T√ºren seit {{ open_duration_minutes }} Min
            offen! Bedingungen: {{ ''KRITISCH'' if is_critical_situation else ''Normal''
            }}

            '
    - alias: Fenster/T√ºren geschlossen - Warnung deaktivieren
      conditions:
      - condition: trigger
        id: closed
      - alias: Aqara Hub ist verf√ºgbar
        condition: template
        value_template: '{{ has_value(''light.aqara_hub_lightbulb'') }}'
      sequence:
      - alias: Warnbeleuchtung ausschalten
        action: light.turn_off
        target:
          entity_id: light.aqara_hub_lightbulb
        data: {}
      - alias: Entwarnung in Logbuch eintragen
        action: logbook.log
        data:
          name: Fenster/T√ºren Entwarnung
          message: 'Alle Fenster/T√ºren geschlossen nach {{ open_duration_minutes }}
            Min - Warnung deaktiviert

            '
    - alias: Fehlerbehandlung - Hub nicht verf√ºgbar
      conditions:
      - condition: template
        value_template: '{{ not has_value(''light.aqara_hub_lightbulb'') }}'
      - alias: Jemand ist zuhause (keine Alternative bei Abwesenheit)
        condition: state
        entity_id: input_boolean.alle_sind_weg
        state: 'off'
      sequence:
      - alias: Fehler loggen
        action: logbook.log
        data:
          name: Fenster/T√ºren Warnung Fehler
          message: 'Aqara Hub nicht verf√ºgbar - Warnung konnte nicht {{ ''aktiviert''
            if trigger.id == ''open'' else ''deaktiviert'' }} werden. Status: {{ states(''light.aqara_hub_lightbulb'')
            }}.'
- id: '1740754575040'
  alias: System ¬ª Zentrale Fehlerbehandlung
  description: Verarbeitet alle Systemfehler zentral und reagiert entsprechend
  triggers:
  - event_type: home_assistant_error
    trigger: event
  - entity_id:
    - input_text.fehlerprotokoll
    trigger: state
  conditions:
  - "{{ trigger.platform == 'event' or (trigger.platform == 'state'
      and trigger.to_state.state != trigger.from_state.state) }}"
  actions:
  - variables:
      error_message: "{% if trigger.platform == 'event' %}\n  {{ trigger.event.data.message\
        \ }}\n{% else %}\n  {{ trigger.to_state.state }}\n{% endif %}\n"
      error_severity: "{% if trigger.platform == 'event' %}\n  {{ trigger.event.data.severity\
        \ | default('Warnung') }}\n{% else %}\n  {{ 'Info' }}\n{% endif %}"
      error_entity: "{% if trigger.platform == 'event' %}\n  {{ trigger.event.data.entity_id\
        \ | default('unbekannt') }}\n{% else %}\n  {{ trigger.entity_id | default('unbekannt') }}\n{% endif %}"
  - data:
      name: Systemfehler
      message: '{{ error_severity }}: {{ error_message }} ({{ error_entity }})'
    action: logbook.log
  - if:
      - condition: template
        value_template: '{{ has_value(''notify.admin_only'') }}'
    then:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ error_severity == 'Kritisch' }}"
            sequence:
            - action: notify.admin_only
              data:
                title: ‚ö†Ô∏è KRITISCHER FEHLER ‚ö†Ô∏è
                message: '{{ error_message }}'
                data:
                  push:
                    interruption-level: critical
          - conditions:
              - condition: template
                value_template: "{{ error_severity == 'Warnung' }}"
            sequence:
            - action: notify.admin_only
              data:
                title: ‚ö†Ô∏è System-Warnung
                message: '{{ error_message }}'
                data:
                  push:
                    interruption-level: time-sensitive
        default:
          - action: notify.admin_only
            data:
              title: ‚ÑπÔ∏è System-Info
              message: '{{ error_message }}'
              data:
                push:
                  interruption-level: passive
    else:
      - action: logbook.log
        data:
          name: Benachrichtigung Fehler
          message: 'Admin notification service nicht verf√ºgbar f√ºr Fehler: {{ error_message }}'
  mode: queued
  max: 10
