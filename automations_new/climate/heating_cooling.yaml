# Climate - Heating Cooling.Yaml
# Generated by automation splitter - 6 automations
# Part of Home Assistant configuration

- id: '1654346657855'
  alias: Helper » Heute wird es sehr heiß werden
  description: 'Prüft täglich um 3 Uhr die Wettervorhersage und setzt Heißwetter-Flags
    (>24°C und >29°C)

    '
  trigger:
  - at: 03:00:00
    trigger: time
  condition: []
  action:
  - if:
    - condition: template
      value_template: '{{ states(''sensor.fuerth_daily'') not in [''unknown'', ''unavailable''] and state_attr(''sensor.fuerth_daily'', ''forecast'') is not none and state_attr(''sensor.fuerth_daily'', ''forecast'') | length > 0 and state_attr(''sensor.fuerth_daily'', ''forecast'')[0].temperature > 29 }}

        '
    then:
    - target:
        entity_id: input_boolean.heute_wird_es_sehr_heiss_werden
      action: input_boolean.turn_on
    else:
    - target:
        entity_id: input_boolean.heute_wird_es_sehr_heiss_werden
      action: input_boolean.turn_off
  - if:
    - condition: template
      value_template: '{{ states(''sensor.fuerth_daily'') not in [''unknown'', ''unavailable''] and state_attr(''sensor.fuerth_daily'', ''forecast'') is not none and state_attr(''sensor.fuerth_daily'', ''forecast'') | length > 0 and 24 < state_attr(''sensor.fuerth_daily'', ''forecast'')[0].temperature <= 29 }}

        '
    then:
    - target:
        entity_id: input_boolean.heute_wird_es_heiss_werden
      action: input_boolean.turn_on
    else:
    - target:
        entity_id: input_boolean.heute_wird_es_heiss_werden
      action: input_boolean.turn_off
  mode: single
- id: '1721922920220'
  alias: Helper » AC manual
  description: 'Intelligente Klimaanlagen-Steuerung mit Temperatur-Bereichen:  > 25°C:
    Cool-Modus (aktive Kühlung)  23-25°C: Fan-Modus (nur Luftzirkulation)  < 23°C:
    Aus  MODUS: Cool/Fan Mode mit Silent Fan NEU: AC geht nur an wenn Außentemperatur
    > 24°C'
  trigger:
  - entity_id:
    - input_boolean.arbeit
    to: 'on'
    id: aktivität-an
    for:
      hours: 0
      minutes: 1
      seconds: 0
    trigger: state
  - entity_id: input_boolean.schlafenszeit
    to: 'on'
    id: schlafenszeit-an
    for: 00:00:10
    trigger: state
  - entity_id:
    - input_boolean.arbeit
    - input_boolean.schlafenszeit
    to: 'off'
    id: modus-aus
    for: 00:00:10
    trigger: state
  - entity_id:
    - sensor.qingping_air_monitor_lite_temperature
    below: 23
    for: 00:03:00
    trigger: numeric_state
    id: temp-unter-23
  - entity_id:
    - sensor.qingping_air_monitor_lite_temperature
    above: 25
    for: 00:03:00
    trigger: numeric_state
    id: temp-ueber-25
  - entity_id:
    - sensor.qingping_air_monitor_lite_temperature
    trigger: state
    for: 00:02:00
    id: temp-check
  condition:
  - condition: state
    entity_id: input_boolean.alle_sind_weg
    state: 'off'
  action:
  - variables:
      arbeit_aktiv: '{{ is_state(''input_boolean.arbeit'', ''on'') }}'
      schlafenszeit_aktiv: '{{ is_state(''input_boolean.schlafenszeit'', ''on'') }}'
      irgendein_modus_aktiv: '{{ arbeit_aktiv or schlafenszeit_aktiv
        }}'
      raum_temp: "{% set qingping = states('sensor.qingping_air_monitor_lite_temperature')\
        \ %} {% if has_value('sensor.qingping_air_monitor_lite_temperature') %}\n  {{ qingping\
        \ | float(25) }}\n{% else %}\n  {{ states('sensor.ac_indoor_temperature')\
        \ | float(25) if has_value('sensor.ac_indoor_temperature') else 25 }}\n{% endif %}\n"
      außen_temp: '{{ state_attr(''weather.fuerth_bayern'', ''temperature'') | float(20) if has_value(''weather.fuerth_bayern'') else 20
        }}'
      außen_warm_genug: '{{ außen_temp > 24 }}'
      verwendeter_sensor: "{% set qingping = states('sensor.qingping_air_monitor_lite_temperature')\
        \ %} {% if has_value('sensor.qingping_air_monitor_lite_temperature') %}\n  Qingping\n\
        {% else %}\n  AC Indoor (Fallback)\n{% endif %}\n"
      ac_laeuft: '{{ has_value(''climate.ac'') and states(''climate.ac'') not in [''off'', ''unknown'', ''unavailable'']
        }}'
      aktueller_modus: '{{ states(''climate.ac'') if has_value(''climate.ac'') else ''off'' }}'
      aktueller_preset: '{{ state_attr(''climate.ac'', ''preset_mode'') if has_value(''climate.ac'') else ''none'' }}'
  - choose:
    - conditions:
      - condition: trigger
        id:
        - aktivität-an
        - schlafenszeit-an
      - condition: template
        value_template: '{{ irgendein_modus_aktiv }}'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ raum_temp > 25 and außen_warm_genug }}'
          sequence:
          - action: climate.set_hvac_mode
            data:
              hvac_mode: cool
            target:
              entity_id: climate.ac
          - delay: 00:00:02
          - if:
            - condition: template
              value_template: '{{ arbeit_aktiv }}'
            then:
            - action: climate.set_preset_mode
              data:
                preset_mode: ieco
              target:
                entity_id: climate.ac
          - action: climate.set_fan_mode
            data:
              fan_mode: silent
            target:
              entity_id: climate.ac
          - action: climate.set_temperature
            data:
              temperature: '{{ 24 if schlafenszeit_aktiv else 23 }}'
            target:
              entity_id: climate.ac
        - conditions:
          - condition: template
            value_template: '{{ raum_temp >= 23 and raum_temp <= 25 and außen_warm_genug
              }}'
          sequence:
          - action: climate.set_hvac_mode
            data:
              hvac_mode: fan_only
            target:
              entity_id: climate.ac
          - delay: 00:00:02
          - action: climate.set_fan_mode
            data:
              fan_mode: silent
            target:
              entity_id: climate.ac
        - conditions:
          - condition: template
            value_template: '{{ raum_temp < 23 or not außen_warm_genug }}'
          sequence: null
    - conditions:
      - condition: trigger
        id: modus-aus
      - condition: template
        value_template: '{{ not irgendein_modus_aktiv }}'
      sequence:
      - action: climate.turn_off
        target:
          entity_id: climate.ac
        data: {}
    - conditions:
      - condition: trigger
        id: temp-unter-23
      - condition: template
        value_template: '{{ ac_laeuft and irgendein_modus_aktiv }}'
      sequence:
      - action: climate.turn_off
        target:
          entity_id: climate.ac
        data: {}
    - conditions:
      - condition: trigger
        id: temp-ueber-25
      - condition: template
        value_template: '{{ irgendein_modus_aktiv and außen_warm_genug and (not ac_laeuft
          or aktueller_modus == ''fan_only'') }}'
      sequence:
      - action: climate.set_hvac_mode
        data:
          hvac_mode: cool
        target:
          entity_id: climate.ac
      - delay: 00:00:02
      - if:
        - condition: template
          value_template: '{{ arbeit_aktiv }}'
        then:
        - action: climate.set_preset_mode
          data:
            preset_mode: ieco
          target:
            entity_id: climate.ac
      - action: climate.set_fan_mode
        data:
          fan_mode: silent
        target:
          entity_id: climate.ac
      - action: climate.set_temperature
        data:
          temperature: '{{ 24 if schlafenszeit_aktiv else 23 }}'
        target:
          entity_id: climate.ac
    - conditions:
      - condition: trigger
        id: temp-check
      - condition: template
        value_template: '{{ irgendein_modus_aktiv }}'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ ac_laeuft and not außen_warm_genug }}'
          sequence:
          - action: climate.turn_off
            target:
              entity_id: climate.ac
            data: {}
        - conditions:
          - condition: template
            value_template: "{{ raum_temp >= 23 and raum_temp <= 25 and ac_laeuft\
              \ and \n   aktueller_modus == 'cool' and außen_warm_genug }}"
          sequence:
          - action: climate.set_hvac_mode
            data:
              hvac_mode: fan_only
            target:
              entity_id: climate.ac
          - delay: 00:00:02
          - action: climate.set_fan_mode
            data:
              fan_mode: silent
            target:
              entity_id: climate.ac
        - conditions:
          - condition: template
            value_template: '{{ raum_temp > 23 and not ac_laeuft and außen_warm_genug
              }}'
          sequence:
          - choose:
            - conditions:
              - condition: template
                value_template: '{{ raum_temp > 25 }}'
              sequence:
              - action: climate.set_hvac_mode
                data:
                  hvac_mode: cool
                target:
                  entity_id: climate.ac
              - delay: 00:00:02
              - if:
                - condition: template
                  value_template: '{{ arbeit_aktiv }}'
                then:
                - action: climate.set_preset_mode
                  data:
                    preset_mode: ieco
                  target:
                    entity_id: climate.ac
              - action: climate.set_fan_mode
                data:
                  fan_mode: silent
                target:
                  entity_id: climate.ac
              - action: climate.set_temperature
                data:
                  temperature: '{{ 24 if schlafenszeit_aktiv else 23 }}'
                target:
                  entity_id: climate.ac
            - conditions:
              - condition: template
                value_template: '{{ raum_temp >= 23 and raum_temp <= 25 }}'
              sequence:
              - action: climate.set_hvac_mode
                data:
                  hvac_mode: fan_only
                target:
                  entity_id: climate.ac
              - delay: 00:00:02
              - action: climate.set_fan_mode
                data:
                  fan_mode: silent
                target:
                  entity_id: climate.ac
  mode: single
  max_exceeded: silent
- id: '1722326567932'
  alias: Helper » Heizung
  description: 'Verwaltet Heizungsmodi basierend auf Außentemperatur, Tageszeit und
    Anwesenheit mit optimierten Triggern und adaptiver Temperatur

    '
  trigger:
  - entity_id: sensor.temperatur_aussen
    above: 21
    for:
      minutes: 10
    id: warm-outside
    trigger: numeric_state
  - entity_id: sensor.temperatur_aussen
    below: 18
    for:
      minutes: 10
    id: cold-outside
    trigger: numeric_state
  - entity_id: input_boolean.alle_sind_weg
    to: 'on'
    for:
      hours: 24
    id: alle-weg-24
    trigger: state
  - entity_id: input_boolean.alle_sind_weg
    to: 'on'
    for:
      hours: 8
    id: alle-weg-8
    trigger: state
  - entity_id: input_boolean.alle_sind_weg
    to: 'off'
    id: alle-da
    trigger: state
  - at: input_datetime.automation_lauft_erst_ab
    id: tagsüber
    trigger: time
  - at: '21:00:00'
    id: nachts
    trigger: time
  - event: start
    id: startup
    trigger: homeassistant
  condition:
  - condition: or
    conditions:
    - condition: trigger
      id: startup
    - condition: and
      conditions:
      - condition: template
        value_template: '{{ now().month <= 4 or now().month >= 10 }}

          '
      - condition: or
        conditions:
        - condition: numeric_state
          entity_id: sensor.temperatur_aussen
          below: 22
        - condition: state
          entity_id: sensor.temperatur_aussen
          state:
          - unknown
          - unavailable
        - condition: trigger
          id:
          - alle-da
          - nachts
          - tagsüber
  action:
  - variables:
      climate_entities:
      - climate.kinderzimmer
      - climate.schlafzimmer
      - climate.wohnzimmer
      current_temp: "{% set temp = states('sensor.temperatur_aussen') %} {% if not has_value('sensor.temperatur_aussen') %}\n  unbekannt\n{% else %}\n  {{ temp | float(10)\
        \ | round(1) }}°C\n{% endif %}\n"
      adaptive_temp_home: "{% set temp = states('sensor.temperatur_aussen') %}\n{%\
        \ if not has_value('sensor.temperatur_aussen') %}\n  20\n{% elif temp | float(10)\
        \ > 15 %}\n  19\n{% elif temp | float(10) > 10 %}\n  20\n{% else %}\n  21\n\
        {% endif %}\n"
      adaptive_temp_eco: "{% set temp = states('sensor.temperatur_aussen') %}\n{%\
        \ if not has_value('sensor.temperatur_aussen') %}\n  18\n{% elif temp | float(10)\
        \ > 15 %}\n  17\n{% elif temp | float(10) > 10 %}\n  18\n{% else %}\n  19\n\
        {% endif %}\n"
      adaptive_temp_away: 16
  - choose:
    - conditions:
      - condition: trigger
        id: nachts
      - condition: state
        entity_id: input_boolean.alle_sind_weg
        state: 'off'
      sequence:
      - action: climate.set_preset_mode
        target:
          entity_id: '{{ climate_entities }}'
        data:
          preset_mode: eco
      - action: climate.set_temperature
        target:
          entity_id: '{{ climate_entities }}'
        data:
          temperature: '{{ adaptive_temp_eco }}'
      - action: notify.persistent_notification
        data:
          title: Heizung Nachtmodus
          message: 'Alle Heizungen auf Eco-Modus ({{ adaptive_temp_eco }}°C) umgestellt.
            Außentemperatur: {{ current_temp }}'
    - conditions:
      - condition: trigger
        id: tagsüber
      - condition: state
        entity_id: input_boolean.alle_sind_weg
        state: 'off'
      sequence:
      - action: climate.set_preset_mode
        target:
          entity_id: '{{ climate_entities }}'
        data:
          preset_mode: home
      - action: climate.set_temperature
        target:
          entity_id: '{{ climate_entities }}'
        data:
          temperature: '{{ adaptive_temp_home }}'
      - action: notify.persistent_notification
        data:
          title: Heizung Tagesmodus
          message: 'Alle Heizungen auf Home-Modus ({{ adaptive_temp_home }}°C) umgestellt.
            Außentemperatur: {{ current_temp }}'
    - conditions:
      - condition: trigger
        id: alle-weg-24
      sequence:
      - action: climate.set_preset_mode
        target:
          entity_id: '{{ climate_entities }}'
        data:
          preset_mode: away
      - action: climate.set_temperature
        target:
          entity_id: '{{ climate_entities }}'
        data:
          temperature: '{{ adaptive_temp_away }}'
      - action: notify.persistent_notification
        data:
          title: Heizung Urlaubsmodus
          message: 'Alle Heizungen auf Away-Modus ({{ adaptive_temp_away }}°C Frostschutz)
            umgestellt. Außentemperatur: {{ current_temp }}'
    - conditions:
      - condition: trigger
        id: alle-weg-8
      sequence:
      - action: climate.set_preset_mode
        target:
          entity_id: '{{ climate_entities }}'
        data:
          preset_mode: eco
      - action: climate.set_temperature
        target:
          entity_id: '{{ climate_entities }}'
        data:
          temperature: '{{ adaptive_temp_eco }}'
      - action: notify.persistent_notification
        data:
          title: Heizung Abwesenheitsmodus
          message: 'Alle Heizungen auf Eco-Modus ({{ adaptive_temp_eco }}°C) umgestellt.
            Außentemperatur: {{ current_temp }}'
    - conditions:
      - condition: trigger
        id: alle-da
      sequence:
      - action: climate.turn_on
        target:
          entity_id: '{{ climate_entities }}'
        data: {}
      - delay:
          seconds: 2
      - choose:
        - conditions:
          - condition: time
            after: '21:00:00'
            before: input_datetime.automation_lauft_erst_ab
          sequence:
          - action: climate.set_preset_mode
            target:
              entity_id: '{{ climate_entities }}'
            data:
              preset_mode: eco
          - action: climate.set_temperature
            target:
              entity_id: '{{ climate_entities }}'
            data:
              temperature: '{{ adaptive_temp_eco }}'
        default:
        - action: climate.set_preset_mode
          target:
            entity_id: '{{ climate_entities }}'
          data:
            preset_mode: home
        - action: climate.set_temperature
          target:
            entity_id: '{{ climate_entities }}'
          data:
            temperature: '{{ adaptive_temp_home }}'
      - action: notify.persistent_notification
        data:
          title: Willkommen zurück!
          message: 'Heizungen wurden wieder aktiviert ({{ adaptive_temp_home if now().hour
            >= 6 and now().hour < 21 else adaptive_temp_eco }}°C). Außentemperatur:
            {{ current_temp }}

            '
    - conditions:
      - condition: trigger
        id: warm-outside
      - condition: state
        entity_id: input_boolean.alle_sind_weg
        state: 'off'
      sequence:
      - action: climate.set_hvac_mode
        target:
          entity_id: '{{ climate_entities }}'
        data:
          hvac_mode: 'off'
      - action: notify.persistent_notification
        data:
          title: Heizung Sommermodus
          message: 'Außentemperatur über 21°C (aktuell: {{ current_temp }}) -  Heizungen
            ausgeschaltet'
    - conditions:
      - condition: trigger
        id: startup
      sequence:
      - wait_template: "{{ has_value('sensor.temperatur_aussen') }}"
        timeout: '00:02:00'
        continue_on_timeout: true
      - delay: '00:02:00'
      - action: system_log.write
        data:
          message: 'Heizungsautomation gestartet. Außentemperatur: {{ current_temp
            }}'
          level: info
      - choose:
        - conditions:
          - condition: state
            entity_id: input_boolean.alle_sind_weg
            state: 'on'
          sequence:
          - action: climate.set_preset_mode
            target:
              entity_id: '{{ climate_entities }}'
            data:
              preset_mode: eco
          - action: climate.set_temperature
            target:
              entity_id: '{{ climate_entities }}'
            data:
              temperature: '{{ adaptive_temp_eco }}'
          - action: notify.persistent_notification
            data:
              title: Heizung initialisiert
              message: 'Eco-Modus aktiviert ({{ adaptive_temp_eco }}°C) -  Niemand
                zu Hause. Außentemperatur: {{ current_temp }}'
        default:
        - choose:
          - conditions:
            - condition: time
              after: '21:00:00'
              before: input_datetime.automation_lauft_erst_ab
            sequence:
            - action: climate.set_preset_mode
              target:
                entity_id: '{{ climate_entities }}'
              data:
                preset_mode: eco
            - action: climate.set_temperature
              target:
                entity_id: '{{ climate_entities }}'
              data:
                temperature: '{{ adaptive_temp_eco }}'
            - action: notify.persistent_notification
              data:
                title: Heizung initialisiert
                message: 'Nachtmodus aktiviert ({{ adaptive_temp_eco }}°C). Außentemperatur:
                  {{ current_temp }}'
          default:
          - action: climate.set_preset_mode
            target:
              entity_id: '{{ climate_entities }}'
            data:
              preset_mode: home
          - action: climate.set_temperature
            target:
              entity_id: '{{ climate_entities }}'
            data:
              temperature: '{{ adaptive_temp_home }}'
          - action: notify.persistent_notification
            data:
              title: Heizung initialisiert
              message: 'Tagesmodus aktiviert ({{ adaptive_temp_home }}°C). Außentemperatur:
                {{ current_temp }}'
  mode: single
  max_exceeded: silent
- id: '1743835898091'
  alias: Helper » Frostwarnung für Blumen (morgen früh unter 0°C)
  description: 'Sendet eine kritische Notification, wenn es in der Nacht auf morgen
    Frost geben soll

    '
  trigger:
  - at: '10:00:00'
    trigger: time
  - at: '15:00:00'
    trigger: time
  condition:
  - condition: template
    value_template: "{% if states('sensor.fuerth_daily') not in ['unknown', 'unavailable'] and state_attr('sensor.fuerth_daily', 'forecast') is not none %}\n  {% set forecast = state_attr('sensor.fuerth_daily', 'forecast') %}\n  {% if forecast and forecast | length > 0 %}\n    {{ forecast[0].templow < 0 }}\n  {% else %}\n    false\n  {% endif %}\n{% else %}\n  false\n{% endif %}\n"
  action:
  - parallel:
      # Mobile Benachrichtigung
      - action: notify.alex
        data:
          title: Frostwarnung für die Blumen
          message: 'WARNUNG: Es wird kalt: In der Nacht sind Frostwerte unter 0°C vorhergesagt!
            Bitte Blumen abdecken.

            '
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 1
      
      # Email notification
      - action: notify.alex_mail
        data:
          title: "❄️ Frostwarnung für die Blumen"
          message: >
            <html>
            <body>
            <h2>❄️ Frostwarnung für die Blumen</h2>
            <p><strong>Warnung:</strong> In der Nacht sind Frostwerte unter 0°C vorhergesagt!</p>
            <p>Bitte decke die Blumen ab, um sie vor dem Frost zu schützen.</p>
            <p><em>Diese Nachricht wurde automatisch generiert basierend auf der Wettervorhersage.</em></p>
            </body>
            </html>
  mode: single
- id: '1749643406352'
  alias: Ventilator » Individuelle Raumsteuerung (Optimiert)
  description: 'Arbeitszimmer: Ventilator mit AC-Integration  Kinderzimmer: Nur während
    Schlafenszeit automatisch, sonst manuell

    '
  trigger:
  - entity_id: sensor.arbeitszimmer_temperatur
    above: 22
    for: 00:02:00
    id: arbeit-warm
    trigger: numeric_state
  - entity_id: sensor.arbeitszimmer_temperatur
    below: 21
    for: 00:05:00
    id: arbeit-kalt
    trigger: numeric_state
  - entity_id: sensor.arbeitszimmer_temperatur
    trigger: state
    for: 00:03:00
    id: arbeit-speed-adjust
  - entity_id: sensor.kinderzimmer_temperatur_und_luftfeuchtigkeit_temperature
    above: 23
    for: 00:03:00
    id: kinder-warm
    trigger: numeric_state
  - entity_id: sensor.kinderzimmer_temperatur_und_luftfeuchtigkeit_temperature
    below: 22
    for: 00:05:00
    id: kinder-kalt
    trigger: numeric_state
  - entity_id: sensor.kinderzimmer_temperatur_und_luftfeuchtigkeit_temperature
    trigger: state
    for: 00:03:00
    id: kinder-speed-adjust
  - entity_id: input_boolean.schlafenszeit
    to: 'off'
    id: schlafenszeit-ende
    trigger: state
  - entity_id: climate.ac
    trigger: state
    id: ac-status-change
  condition: []
  action:
  - variables:
      arbeit_fan: fan.zhimi_za4_2dca_fan
      kinder_fan: fan.zhimi_za4_fb1b_fan
      niemand_zuhause: '{{ is_state(''input_boolean.alle_sind_weg'', ''on'') }}'
      schlafenszeit_aktiv: '{{ is_state(''input_boolean.schlafenszeit'', ''on'') }}'
      ac_laeuft: '{{ states(''climate.ac'') in [''cool'', ''heat'', ''dry'', ''fan_only'']
        }}'
      ac_temperatur: '{{ state_attr(''climate.ac'', ''current_temperature'') | float(25) if has_value(''climate.ac'') else 25
        }}'
  - choose:
    - conditions:
      - condition: trigger
        id: arbeit-warm
      - condition: template
        value_template: '{{ not niemand_zuhause }}'
      - condition: state
        entity_id: fan.zhimi_za4_2dca_fan
        state: 'off'
      sequence:
      - condition: or
        conditions:
        - condition: template
          value_template: '{{ not ac_laeuft }}'
        - condition: template
          value_template: '{{ ac_laeuft and has_value(''sensor.arbeitszimmer_temperatur'') and states(''sensor.arbeitszimmer_temperatur'')|float(22)
            > 24 }}'
      - action: fan.turn_on
        target:
          entity_id: '{{ arbeit_fan }}'
        data: {}
      - action: fan.set_percentage
        data:
          percentage: "{% if has_value('sensor.arbeitszimmer_temperatur') %}\n  {% set temp = states('sensor.arbeitszimmer_temperatur')|float(22) %}\n  {% if ac_laeuft %}\n    {# Mit AC: Niedrigere Stufen für Luftzirkulation #}\n    {% if temp > 28 %} 75\n    {% elif temp > 26 %} 50\n    {% elif temp > 24 %} 25\n    {% else %} 25\n    {% endif %}\n  {% else %}\n    {# Ohne AC: Normale Stufen #}\n    {% if temp > 28 %} 100\n    {% elif temp > 26 %} 75\n    {% elif temp > 24 %} 50\n    {% else %} 25\n    {% endif %}\n  {% endif %}\n{% else %}\n  25\n{% endif %}\n"
        target:
          entity_id: '{{ arbeit_fan }}'
      - action: notify.persistent_notification
        data:
          title: Ventilator Arbeitszimmer
          message: 'Eingeschaltet - Temperatur: {{ states(''sensor.arbeitszimmer_temperatur'') if has_value(''sensor.arbeitszimmer_temperatur'') else ''N/A''
            }}°C {{ ''Mit AC-Unterstützung'' if ac_laeuft else ''Standalone'' }}

            '
    - conditions:
      - condition: trigger
        id: arbeit-kalt
      - condition: state
        entity_id: fan.zhimi_za4_2dca_fan
        state: 'on'
      sequence:
      - action: fan.turn_off
        target:
          entity_id: '{{ arbeit_fan }}'
        data: {}
    - conditions:
      - condition: trigger
        id: arbeit-speed-adjust
      - condition: state
        entity_id: fan.zhimi_za4_2dca_fan
        state: 'on'
      sequence:
      - action: fan.set_percentage
        data:
          percentage: "{% if has_value('sensor.arbeitszimmer_temperatur') %}\n  {% set temp = states('sensor.arbeitszimmer_temperatur')|float(22) %}\n  {% if ac_laeuft %}\n    {% if temp > 28 %} 75\n    {% elif temp > 26 %} 50\n    {% elif temp > 24 %} 25\n    {% elif temp > 22 %} 25\n    {% else %} 25\n    {% endif %}\n  {% else %}\n    {% if temp > 28 %} 100\n    {% elif temp > 26 %} 75\n    {% elif temp > 24 %} 50\n    {% elif temp > 22 %} 25\n    {% else %} 25\n    {% endif %}\n  {% endif %}\n{% else %}\n  25\n{% endif %}\n"
        target:
          entity_id: '{{ arbeit_fan }}'
    - conditions:
      - condition: trigger
        id: kinder-warm
      - condition: template
        value_template: '{{ schlafenszeit_aktiv and not niemand_zuhause }}'
      - condition: state
        entity_id: fan.zhimi_za4_fb1b_fan
        state: 'off'
      sequence:
      - action: fan.turn_on
        target:
          entity_id: '{{ kinder_fan }}'
        data: {}
      - action: fan.set_percentage
        data:
          percentage: '{% if has_value(''sensor.kinderzimmer_temperatur_und_luftfeuchtigkeit_temperature'') %}
            {% set temp = states(''sensor.kinderzimmer_temperatur_und_luftfeuchtigkeit_temperature'')|float(22) %}
            {# Sanfte Stufen für Kinder #}
            {% if temp > 28 %} 50 {% elif temp > 26 %} 35 {% elif temp > 24 %} 25 {% else %} 20 {% endif %}
            {% else %} 20 {% endif %}

            '
        target:
          entity_id: '{{ kinder_fan }}'
    - conditions:
      - condition: trigger
        id: kinder-kalt
      - condition: template
        value_template: '{{ schlafenszeit_aktiv }}'
      - condition: state
        entity_id: fan.zhimi_za4_fb1b_fan
        state: 'on'
      sequence:
      - action: fan.turn_off
        target:
          entity_id: '{{ kinder_fan }}'
        data: {}
    - conditions:
      - condition: trigger
        id: kinder-speed-adjust
      - condition: template
        value_template: '{{ schlafenszeit_aktiv }}'
      - condition: state
        entity_id: fan.zhimi_za4_fb1b_fan
        state: 'on'
      sequence:
      - action: fan.set_percentage
        data:
          percentage: '{% if has_value(''sensor.kinderzimmer_temperatur_und_luftfeuchtigkeit_temperature'') %}
            {% set temp = states(''sensor.kinderzimmer_temperatur_und_luftfeuchtigkeit_temperature'')|float(22) %}
            {% if temp > 28 %} 50 {% elif temp > 26 %} 35 {% elif temp > 24 %} 25 {% elif temp > 22 %} 20 {% else %} 20 {% endif %}
            {% else %} 20 {% endif %}

            '
        target:
          entity_id: '{{ kinder_fan }}'
    - conditions:
      - condition: trigger
        id: schlafenszeit-ende
      - condition: state
        entity_id: fan.zhimi_za4_fb1b_fan
        state: 'on'
      sequence:
      - action: fan.turn_off
        target:
          entity_id: '{{ kinder_fan }}'
        data: {}
    - conditions:
      - condition: trigger
        id: ac-status-change
      - condition: state
        entity_id: fan.zhimi_za4_2dca_fan
        state: 'on'
      sequence:
      - action: fan.set_percentage
        data:
          percentage: "{% if has_value('sensor.arbeitszimmer_temperatur') %}\n  {% set temp = states('sensor.arbeitszimmer_temperatur')|float(22) %}\n  {% if ac_laeuft %}\n    {% if temp > 28 %} 75\n    {% elif temp > 26 %} 50\n    {% elif temp > 24 %} 25\n    {% else %} 25\n    {% endif %}\n  {% else %}\n    {% if temp > 28 %} 100\n    {% elif temp > 26 %} 75\n    {% elif temp > 24 %} 50\n    {% else %} 25\n    {% endif %}\n  {% endif %}\n{% else %}\n  25\n{% endif %}\n"
        target:
          entity_id: '{{ arbeit_fan }}'
    - conditions:
      - condition: template
        value_template: '{{ niemand_zuhause }}'
      sequence:
      - action: fan.turn_off
        target:
          entity_id:
          - '{{ arbeit_fan }}'
          - '{{ kinder_fan }}'
        data: {}
  mode: parallel
  max: 4
- id: '1749999999999'
  alias: Heizung » Adaptive Pre-Heating (Room Temperature Based)
  description: 'Adaptive Heizungssteuerung basierend auf aktueller Raumtemperatur - startet automatisch 1-4 Stunden vor Aufwachzeit je nach Bedarf'
  trigger:
  - trigger: template
    value_template: >
      {% set current_time = now().strftime('%H:%M') %}
      {% if states('binary_sensor.workday_sensor') not in ['unknown', 'unavailable'] and states('input_datetime.aufwachzeit_arbeitstag') not in ['unknown', 'unavailable'] and states('input_datetime.aufwachzeit_freier_tag') not in ['unknown', 'unavailable'] %}
        {% if is_state('binary_sensor.workday_sensor', 'on') %}
          {% set wake_time = states('input_datetime.aufwachzeit_arbeitstag') %}
        {% else %}
          {% set wake_time = states('input_datetime.aufwachzeit_freier_tag') %}
        {% endif %}
        {% set wake_hour = wake_time.split(':')[0]|int %}
        {% set wake_minute = wake_time.split(':')[1]|int %}

        {# Get average indoor temperature #}
        {% set temps = [
          states('sensor.arbeitszimmer_temperatur')|float(20),
          states('sensor.kinderzimmer_temperatur_und_luftfeuchtigkeit_temperature')|float(20),
          states('sensor.wohnzimmer_temperatur')|float(20),
          states('sensor.temperatur_schlafzimmer')|float(20)
        ] %}
        {% set avg_indoor_temp = (temps|sum / temps|length)|round(1) %}

        {# Determine required pre-heat hours based on room temperature #}
        {% set preheat_hours = 4 if avg_indoor_temp < 16 else 3 if avg_indoor_temp < 18 else 2 if avg_indoor_temp < 20 else 1 %}

        {# Calculate when to start for each possible duration #}
        {% for hours in range(1, 5) %}
          {% set start_hour = wake_hour - hours %}
          {% if start_hour < 0 %}
            {% set start_hour = start_hour + 24 %}
          {% endif %}
          {% set check_time = '{:02d}:{:02d}'.format(start_hour, wake_minute) %}
          {% if current_time == check_time and hours == preheat_hours %}
            {{ true }}
          {% endif %}
        {% endfor %}
      {% else %}
        {# Fallback for missing sensors - check every hour from 4 hours before 7 AM #}
        {{ current_time in ['03:00', '04:00', '05:00', '06:00'] }}
      {% endif %}
  condition:
  - condition: state
    entity_id: input_boolean.alle_sind_weg
    state: 'off'
  - condition: template
    value_template: '{{ now().month <= 4 or now().month >= 10 }}'
  - condition: state
    entity_id: input_boolean.schlafenszeit
    state: 'on'
  action:
  - variables:
      climate_entities:
      - climate.kinderzimmer
      - climate.schlafzimmer
      - climate.wohnzimmer
      outdoor_temp: '{{ states(''sensor.temperatur_aussen'')|float(10) }}'

      # Room temperatures
      arbeitszimmer_temp: '{{ states(''sensor.arbeitszimmer_temperatur'')|float(20) }}'
      kinderzimmer_temp: '{{ states(''sensor.kinderzimmer_temperatur_und_luftfeuchtigkeit_temperature'')|float(20) }}'
      wohnzimmer_temp: '{{ states(''sensor.wohnzimmer_temperatur'')|float(20) }}'
      schlafzimmer_temp: '{{ states(''sensor.temperatur_schlafzimmer'')|float(20) }}'

      # Average indoor temperature
      avg_indoor_temp: '{{ ((arbeitszimmer_temp + kinderzimmer_temp + wohnzimmer_temp + schlafzimmer_temp) / 4)|round(1) }}'

      # Determine heating strategy based on room temperature
      heating_needed: '{{ avg_indoor_temp < 18 }}'
      intensive_heating: '{{ avg_indoor_temp < 16 }}'

      # Target temperature based on outdoor conditions
      adaptive_temp_home: "{% set temp = states('sensor.temperatur_aussen') %}\n{%\
        \ if not has_value('sensor.temperatur_aussen') %}\n  20\n{% elif temp | float(10)\
        \ > 15 %}\n  19\n{% elif temp | float(10) > 10 %}\n  20\n{% else %}\n  21\n\
        {% endif %}\n"

      # Calculate estimated hours until wake-up
      estimated_preheat_hours: >
        {% if avg_indoor_temp < 16 %}4
        {% elif avg_indoor_temp < 18 %}3
        {% elif avg_indoor_temp < 20 %}2
        {% else %}1{% endif %}
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ heating_needed }}'
      sequence:
      - action: climate.set_preset_mode
        target:
          entity_id: '{{ climate_entities }}'
        data:
          preset_mode: home
      - action: climate.set_temperature
        target:
          entity_id: '{{ climate_entities }}'
        data:
          temperature: '{{ adaptive_temp_home }}'
      - action: notify.persistent_notification
        data:
          title: Adaptive Pre-Heating Started
          message: >
            Pre-heating started {{ estimated_preheat_hours }}h before wake-up.
            Current room temp: {{ avg_indoor_temp }}°C → Target: {{ adaptive_temp_home }}°C
            Outside: {{ outdoor_temp }}°C | Strategy: {{ 'Intensive' if intensive_heating else 'Normal' }}
    default:
    - action: notify.persistent_notification
      data:
        title: Pre-Heating Skipped
        message: 'Room temperature adequate ({{ avg_indoor_temp }}°C). No pre-heating needed.'
  mode: single
