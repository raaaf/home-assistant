# Climate - Heating Cooling.Yaml
# Generated by automation splitter - 6 automations
# Part of Home Assistant configuration

- id: '1654346657855'
  alias: Helper » Heute wird es sehr heiß werden
  description: 'Prüft täglich um 3 Uhr die Wettervorhersage und setzt Heißwetter-Flags
    (>24°C und >29°C)

    '
  trigger:
  - at: 03:00:00
    trigger: time
  condition: []
  action:
  - if:
    - condition: template
      value_template: '{{ states(''sensor.fuerth_daily'') not in [''unknown'', ''unavailable''] and state_attr(''sensor.fuerth_daily'', ''forecast'') is not none and state_attr(''sensor.fuerth_daily'', ''forecast'') | length > 0 and state_attr(''sensor.fuerth_daily'', ''forecast'')[0].temperature > 29 }}

        '
    then:
    - target:
        entity_id: input_boolean.heute_wird_es_sehr_heiss_werden
      action: input_boolean.turn_on
    else:
    - target:
        entity_id: input_boolean.heute_wird_es_sehr_heiss_werden
      action: input_boolean.turn_off
  - if:
    - condition: template
      value_template: '{{ states(''sensor.fuerth_daily'') not in [''unknown'', ''unavailable''] and state_attr(''sensor.fuerth_daily'', ''forecast'') is not none and state_attr(''sensor.fuerth_daily'', ''forecast'') | length > 0 and 24 < state_attr(''sensor.fuerth_daily'', ''forecast'')[0].temperature <= 29 }}

        '
    then:
    - target:
        entity_id: input_boolean.heute_wird_es_heiss_werden
      action: input_boolean.turn_on
    else:
    - target:
        entity_id: input_boolean.heute_wird_es_heiss_werden
      action: input_boolean.turn_off
  mode: single
- id: '1721922920220'
  alias: Helper » AC manual
  description: 'Intelligente Klimaanlagen-Steuerung mit Temperatur-Bereichen:  > 25°C:
    Cool-Modus (aktive Kühlung)  23-25°C: Fan-Modus (nur Luftzirkulation)  < 23°C:
    Aus  MODUS: Cool/Fan Mode mit Silent Fan NEU: AC geht nur an wenn Außentemperatur
    > 24°C'
  trigger:
  - entity_id:
    - input_boolean.arbeit
    to: 'on'
    id: aktivität-an
    for:
      hours: 0
      minutes: 1
      seconds: 0
    trigger: state
  - entity_id: input_boolean.schlafenszeit
    to: 'on'
    id: schlafenszeit-an
    for: 00:00:10
    trigger: state
  - entity_id:
    - input_boolean.arbeit
    - input_boolean.schlafenszeit
    to: 'off'
    id: modus-aus
    for: 00:00:10
    trigger: state
  - entity_id:
    - sensor.qingping_air_monitor_lite_temperature
    below: 23
    for: 00:03:00
    trigger: numeric_state
    id: temp-unter-23
  - entity_id:
    - sensor.qingping_air_monitor_lite_temperature
    above: 25
    for: 00:03:00
    trigger: numeric_state
    id: temp-ueber-25
  - entity_id:
    - sensor.qingping_air_monitor_lite_temperature
    trigger: state
    for: 00:02:00
    id: temp-check
  condition:
  - condition: state
    entity_id: input_boolean.alle_sind_weg
    state: 'off'
  action:
  - variables:
      arbeit_aktiv: '{{ is_state(''input_boolean.arbeit'', ''on'') }}'
      schlafenszeit_aktiv: '{{ is_state(''input_boolean.schlafenszeit'', ''on'') }}'
      irgendein_modus_aktiv: '{{ arbeit_aktiv or schlafenszeit_aktiv
        }}'
      raum_temp: "{% set qingping = states('sensor.qingping_air_monitor_lite_temperature')\
        \ %} {% if has_value('sensor.qingping_air_monitor_lite_temperature') %}\n  {{ qingping\
        \ | float(25) }}\n{% else %}\n  {{ states('sensor.ac_indoor_temperature')\
        \ | float(25) if has_value('sensor.ac_indoor_temperature') else 25 }}\n{% endif %}\n"
      außen_temp: '{{ state_attr(''weather.fuerth_bayern'', ''temperature'') | float(20) if has_value(''weather.fuerth_bayern'') else 20
        }}'
      außen_warm_genug: '{{ außen_temp > 24 }}'
      verwendeter_sensor: "{% set qingping = states('sensor.qingping_air_monitor_lite_temperature')\
        \ %} {% if has_value('sensor.qingping_air_monitor_lite_temperature') %}\n  Qingping\n\
        {% else %}\n  AC Indoor (Fallback)\n{% endif %}\n"
      ac_laeuft: '{{ has_value(''climate.ac'') and states(''climate.ac'') not in [''off'', ''unknown'', ''unavailable'']
        }}'
      aktueller_modus: '{{ states(''climate.ac'') if has_value(''climate.ac'') else ''off'' }}'
      aktueller_preset: '{{ state_attr(''climate.ac'', ''preset_mode'') if has_value(''climate.ac'') else ''none'' }}'
  - choose:
    - conditions:
      - condition: trigger
        id:
        - aktivität-an
        - schlafenszeit-an
      - condition: template
        value_template: '{{ irgendein_modus_aktiv }}'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ raum_temp > 25 and außen_warm_genug }}'
          sequence:
          - action: climate.set_hvac_mode
            data:
              hvac_mode: cool
            target:
              entity_id: climate.ac
          - delay: 00:00:02
          - if:
            - condition: template
              value_template: '{{ arbeit_aktiv }}'
            then:
            - action: climate.set_preset_mode
              data:
                preset_mode: ieco
              target:
                entity_id: climate.ac
          - action: climate.set_fan_mode
            data:
              fan_mode: silent
            target:
              entity_id: climate.ac
          - action: climate.set_temperature
            data:
              temperature: '{{ 24 if schlafenszeit_aktiv else 23 }}'
            target:
              entity_id: climate.ac
        - conditions:
          - condition: template
            value_template: '{{ raum_temp >= 23 and raum_temp <= 25 and außen_warm_genug
              }}'
          sequence:
          - action: climate.set_hvac_mode
            data:
              hvac_mode: fan_only
            target:
              entity_id: climate.ac
          - delay: 00:00:02
          - action: climate.set_fan_mode
            data:
              fan_mode: silent
            target:
              entity_id: climate.ac
        - conditions:
          - condition: template
            value_template: '{{ raum_temp < 23 or not außen_warm_genug }}'
          sequence: null
    - conditions:
      - condition: trigger
        id: modus-aus
      - condition: template
        value_template: '{{ not irgendein_modus_aktiv }}'
      sequence:
      - action: climate.turn_off
        target:
          entity_id: climate.ac
        data: {}
    - conditions:
      - condition: trigger
        id: temp-unter-23
      - condition: template
        value_template: '{{ ac_laeuft and irgendein_modus_aktiv }}'
      sequence:
      - action: climate.turn_off
        target:
          entity_id: climate.ac
        data: {}
    - conditions:
      - condition: trigger
        id: temp-ueber-25
      - condition: template
        value_template: '{{ irgendein_modus_aktiv and außen_warm_genug and (not ac_laeuft
          or aktueller_modus == ''fan_only'') }}'
      sequence:
      - action: climate.set_hvac_mode
        data:
          hvac_mode: cool
        target:
          entity_id: climate.ac
      - delay: 00:00:02
      - if:
        - condition: template
          value_template: '{{ arbeit_aktiv }}'
        then:
        - action: climate.set_preset_mode
          data:
            preset_mode: ieco
          target:
            entity_id: climate.ac
      - action: climate.set_fan_mode
        data:
          fan_mode: silent
        target:
          entity_id: climate.ac
      - action: climate.set_temperature
        data:
          temperature: '{{ 24 if schlafenszeit_aktiv else 23 }}'
        target:
          entity_id: climate.ac
    - conditions:
      - condition: trigger
        id: temp-check
      - condition: template
        value_template: '{{ irgendein_modus_aktiv }}'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ ac_laeuft and not außen_warm_genug }}'
          sequence:
          - action: climate.turn_off
            target:
              entity_id: climate.ac
            data: {}
        - conditions:
          - condition: template
            value_template: "{{ raum_temp >= 23 and raum_temp <= 25 and ac_laeuft\
              \ and \n   aktueller_modus == 'cool' and außen_warm_genug }}"
          sequence:
          - action: climate.set_hvac_mode
            data:
              hvac_mode: fan_only
            target:
              entity_id: climate.ac
          - delay: 00:00:02
          - action: climate.set_fan_mode
            data:
              fan_mode: silent
            target:
              entity_id: climate.ac
        - conditions:
          - condition: template
            value_template: '{{ raum_temp > 23 and not ac_laeuft and außen_warm_genug
              }}'
          sequence:
          - choose:
            - conditions:
              - condition: template
                value_template: '{{ raum_temp > 25 }}'
              sequence:
              - action: climate.set_hvac_mode
                data:
                  hvac_mode: cool
                target:
                  entity_id: climate.ac
              - delay: 00:00:02
              - if:
                - condition: template
                  value_template: '{{ arbeit_aktiv }}'
                then:
                - action: climate.set_preset_mode
                  data:
                    preset_mode: ieco
                  target:
                    entity_id: climate.ac
              - action: climate.set_fan_mode
                data:
                  fan_mode: silent
                target:
                  entity_id: climate.ac
              - action: climate.set_temperature
                data:
                  temperature: '{{ 24 if schlafenszeit_aktiv else 23 }}'
                target:
                  entity_id: climate.ac
            - conditions:
              - condition: template
                value_template: '{{ raum_temp >= 23 and raum_temp <= 25 }}'
              sequence:
              - action: climate.set_hvac_mode
                data:
                  hvac_mode: fan_only
                target:
                  entity_id: climate.ac
              - delay: 00:00:02
              - action: climate.set_fan_mode
                data:
                  fan_mode: silent
                target:
                  entity_id: climate.ac
  mode: single
  max_exceeded: silent
- id: '1743835898091'
  alias: Helper » Frostwarnung für Blumen (morgen früh unter 0°C)
  description: 'Sendet eine kritische Notification, wenn es in der Nacht auf morgen
    Frost geben soll

    '
  trigger:
  - at: '10:00:00'
    trigger: time
  - at: '15:00:00'
    trigger: time
  condition:
  - condition: template
    value_template: "{% if states('sensor.fuerth_daily') not in ['unknown', 'unavailable'] and state_attr('sensor.fuerth_daily', 'forecast') is not none %}\n  {% set forecast = state_attr('sensor.fuerth_daily', 'forecast') %}\n  {% if forecast and forecast | length > 0 %}\n    {{ forecast[0].templow < 0 }}\n  {% else %}\n    false\n  {% endif %}\n{% else %}\n  false\n{% endif %}\n"
  action:
  - parallel:
      # Mobile Benachrichtigung
      - action: notify.alex
        data:
          title: Frostwarnung für die Blumen
          message: 'WARNUNG: Es wird kalt: In der Nacht sind Frostwerte unter 0°C vorhergesagt!
            Bitte Blumen abdecken.

            '
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 1
      
      # Email notification
      - action: notify.alex_mail
        data:
          title: "❄️ Frostwarnung für die Blumen"
          message: >
            <html>
            <body>
            <h2>❄️ Frostwarnung für die Blumen</h2>
            <p><strong>Warnung:</strong> In der Nacht sind Frostwerte unter 0°C vorhergesagt!</p>
            <p>Bitte decke die Blumen ab, um sie vor dem Frost zu schützen.</p>
            <p><em>Diese Nachricht wurde automatisch generiert basierend auf der Wettervorhersage.</em></p>
            </body>
            </html>
  mode: single
- id: '1749643406352'
  alias: Ventilator » Individuelle Raumsteuerung (Optimiert)
  description: 'Arbeitszimmer: Ventilator mit AC-Integration  Kinderzimmer: Nur während
    Schlafenszeit automatisch, sonst manuell

    '
  trigger:
  - entity_id: sensor.arbeitszimmer_temperatur
    above: 22
    for: 00:02:00
    id: arbeit-warm
    trigger: numeric_state
  - entity_id: sensor.arbeitszimmer_temperatur
    below: 21
    for: 00:05:00
    id: arbeit-kalt
    trigger: numeric_state
  - entity_id: sensor.arbeitszimmer_temperatur
    trigger: state
    for: 00:03:00
    id: arbeit-speed-adjust
  - entity_id: sensor.kinderzimmer_temperatur_und_luftfeuchtigkeit_temperature
    above: 23
    for: 00:03:00
    id: kinder-warm
    trigger: numeric_state
  - entity_id: sensor.kinderzimmer_temperatur_und_luftfeuchtigkeit_temperature
    below: 22
    for: 00:05:00
    id: kinder-kalt
    trigger: numeric_state
  - entity_id: sensor.kinderzimmer_temperatur_und_luftfeuchtigkeit_temperature
    trigger: state
    for: 00:03:00
    id: kinder-speed-adjust
  - entity_id: input_boolean.schlafenszeit
    to: 'off'
    id: schlafenszeit-ende
    trigger: state
  - entity_id: climate.ac
    trigger: state
    id: ac-status-change
  condition: []
  action:
  - variables:
      arbeit_fan: fan.zhimi_za4_2dca_fan
      kinder_fan: fan.zhimi_za4_fb1b_fan
      niemand_zuhause: '{{ is_state(''input_boolean.alle_sind_weg'', ''on'') }}'
      schlafenszeit_aktiv: '{{ is_state(''input_boolean.schlafenszeit'', ''on'') }}'
      ac_laeuft: '{{ states(''climate.ac'') in [''cool'', ''heat'', ''dry'', ''fan_only'']
        }}'
      ac_temperatur: '{{ state_attr(''climate.ac'', ''current_temperature'') | float(25) if has_value(''climate.ac'') else 25
        }}'
  - choose:
    - conditions:
      - condition: trigger
        id: arbeit-warm
      - condition: template
        value_template: '{{ not niemand_zuhause }}'
      - condition: state
        entity_id: fan.zhimi_za4_2dca_fan
        state: 'off'
      sequence:
      - condition: or
        conditions:
        - condition: template
          value_template: '{{ not ac_laeuft }}'
        - condition: template
          value_template: '{{ ac_laeuft and has_value(''sensor.arbeitszimmer_temperatur'') and states(''sensor.arbeitszimmer_temperatur'')|float(22)
            > 24 }}'
      - action: fan.turn_on
        target:
          entity_id: '{{ arbeit_fan }}'
        data: {}
      - action: fan.set_percentage
        data:
          percentage: "{% if has_value('sensor.arbeitszimmer_temperatur') %}\n  {% set temp = states('sensor.arbeitszimmer_temperatur')|float(22) %}\n  {% if ac_laeuft %}\n    {# Mit AC: Niedrigere Stufen für Luftzirkulation #}\n    {% if temp > 28 %} 75\n    {% elif temp > 26 %} 50\n    {% elif temp > 24 %} 25\n    {% else %} 25\n    {% endif %}\n  {% else %}\n    {# Ohne AC: Normale Stufen #}\n    {% if temp > 28 %} 100\n    {% elif temp > 26 %} 75\n    {% elif temp > 24 %} 50\n    {% else %} 25\n    {% endif %}\n  {% endif %}\n{% else %}\n  25\n{% endif %}\n"
        target:
          entity_id: '{{ arbeit_fan }}'
      - action: notify.persistent_notification
        data:
          title: Ventilator Arbeitszimmer
          message: 'Eingeschaltet - Temperatur: {{ states(''sensor.arbeitszimmer_temperatur'') if has_value(''sensor.arbeitszimmer_temperatur'') else ''N/A''
            }}°C {{ ''Mit AC-Unterstützung'' if ac_laeuft else ''Standalone'' }}

            '
    - conditions:
      - condition: trigger
        id: arbeit-kalt
      - condition: state
        entity_id: fan.zhimi_za4_2dca_fan
        state: 'on'
      sequence:
      - action: fan.turn_off
        target:
          entity_id: '{{ arbeit_fan }}'
        data: {}
    - conditions:
      - condition: trigger
        id: arbeit-speed-adjust
      - condition: state
        entity_id: fan.zhimi_za4_2dca_fan
        state: 'on'
      sequence:
      - action: fan.set_percentage
        data:
          percentage: "{% if has_value('sensor.arbeitszimmer_temperatur') %}\n  {% set temp = states('sensor.arbeitszimmer_temperatur')|float(22) %}\n  {% if ac_laeuft %}\n    {% if temp > 28 %} 75\n    {% elif temp > 26 %} 50\n    {% elif temp > 24 %} 25\n    {% elif temp > 22 %} 25\n    {% else %} 25\n    {% endif %}\n  {% else %}\n    {% if temp > 28 %} 100\n    {% elif temp > 26 %} 75\n    {% elif temp > 24 %} 50\n    {% elif temp > 22 %} 25\n    {% else %} 25\n    {% endif %}\n  {% endif %}\n{% else %}\n  25\n{% endif %}\n"
        target:
          entity_id: '{{ arbeit_fan }}'
    - conditions:
      - condition: trigger
        id: kinder-warm
      - condition: template
        value_template: '{{ schlafenszeit_aktiv and not niemand_zuhause }}'
      - condition: state
        entity_id: fan.zhimi_za4_fb1b_fan
        state: 'off'
      sequence:
      - action: fan.turn_on
        target:
          entity_id: '{{ kinder_fan }}'
        data: {}
      - action: fan.set_percentage
        data:
          percentage: '{% if has_value(''sensor.kinderzimmer_temperatur_und_luftfeuchtigkeit_temperature'') %}
            {% set temp = states(''sensor.kinderzimmer_temperatur_und_luftfeuchtigkeit_temperature'')|float(22) %}
            {# Sanfte Stufen für Kinder #}
            {% if temp > 28 %} 50 {% elif temp > 26 %} 35 {% elif temp > 24 %} 25 {% else %} 20 {% endif %}
            {% else %} 20 {% endif %}

            '
        target:
          entity_id: '{{ kinder_fan }}'
    - conditions:
      - condition: trigger
        id: kinder-kalt
      - condition: template
        value_template: '{{ schlafenszeit_aktiv }}'
      - condition: state
        entity_id: fan.zhimi_za4_fb1b_fan
        state: 'on'
      sequence:
      - action: fan.turn_off
        target:
          entity_id: '{{ kinder_fan }}'
        data: {}
    - conditions:
      - condition: trigger
        id: kinder-speed-adjust
      - condition: template
        value_template: '{{ schlafenszeit_aktiv }}'
      - condition: state
        entity_id: fan.zhimi_za4_fb1b_fan
        state: 'on'
      sequence:
      - action: fan.set_percentage
        data:
          percentage: '{% if has_value(''sensor.kinderzimmer_temperatur_und_luftfeuchtigkeit_temperature'') %}
            {% set temp = states(''sensor.kinderzimmer_temperatur_und_luftfeuchtigkeit_temperature'')|float(22) %}
            {% if temp > 28 %} 50 {% elif temp > 26 %} 35 {% elif temp > 24 %} 25 {% elif temp > 22 %} 20 {% else %} 20 {% endif %}
            {% else %} 20 {% endif %}

            '
        target:
          entity_id: '{{ kinder_fan }}'
    - conditions:
      - condition: trigger
        id: schlafenszeit-ende
      - condition: state
        entity_id: fan.zhimi_za4_fb1b_fan
        state: 'on'
      sequence:
      - action: fan.turn_off
        target:
          entity_id: '{{ kinder_fan }}'
        data: {}
    - conditions:
      - condition: trigger
        id: ac-status-change
      - condition: state
        entity_id: fan.zhimi_za4_2dca_fan
        state: 'on'
      sequence:
      - action: fan.set_percentage
        data:
          percentage: "{% if has_value('sensor.arbeitszimmer_temperatur') %}\n  {% set temp = states('sensor.arbeitszimmer_temperatur')|float(22) %}\n  {% if ac_laeuft %}\n    {% if temp > 28 %} 75\n    {% elif temp > 26 %} 50\n    {% elif temp > 24 %} 25\n    {% else %} 25\n    {% endif %}\n  {% else %}\n    {% if temp > 28 %} 100\n    {% elif temp > 26 %} 75\n    {% elif temp > 24 %} 50\n    {% else %} 25\n    {% endif %}\n  {% endif %}\n{% else %}\n  25\n{% endif %}\n"
        target:
          entity_id: '{{ arbeit_fan }}'
    - conditions:
      - condition: template
        value_template: '{{ niemand_zuhause }}'
      sequence:
      - action: fan.turn_off
        target:
          entity_id:
          - '{{ arbeit_fan }}'
          - '{{ kinder_fan }}'
        data: {}
  mode: parallel
  max: 4
- id: '1749999999998'
  alias: Heizung » Smart Floor Control (Predictive)
  description: 'Predictive floor heating control for slow-response system (1-2h warmup). Morning boost based on forecast, afternoon boost based on actual temp. Only controls Kinderzimmer, Schlafzimmer, Wohnzimmer.'
  trigger:
  - at: "06:30:00"
    id: morning-boost
    trigger: time
  - at: "15:30:00"
    id: afternoon-boost
    trigger: time
  condition: []
  action:
  - variables:
      heating_switches:
      - switch.heizung_kinderzimmer
      - switch.heizung_schlafzimmer
      - switch.heizung_wohnzimmer
  - choose:
    # === LAYER 1: MORNING BOOST (06:00) ===
    - conditions:
      - condition: trigger
        id: morning-boost
      - condition: state
        entity_id: input_boolean.alle_sind_weg
        state: 'off'
      - condition: template
        value_template: '{{ now().month <= 4 or now().month >= 10 }}'
      - condition: template
        value_template: >
          {% set forecast = state_attr('sensor.fuerth_daily', 'forecast') %}
          {% if forecast and forecast|length > 0 %}
            {{ forecast[0].temperature < 20 }}
          {% else %}
            false
          {% endif %}
      sequence:
      - action: switch.turn_on
        target:
          entity_id: '{{ heating_switches }}'
      - action: notify.persistent_notification
        data:
          title: "🔥 Heizung: Morning Boost"
          message: "Vorhersage zeigt kalten Tag (< 20°C). Heizung für 1,5h aktiviert."
      - delay: '01:30:00'
      - action: switch.turn_off
        target:
          entity_id: '{{ heating_switches }}'
      - action: notify.persistent_notification
        data:
          title: "✅ Heizung: Morning Boost beendet"
          message: "1,5-Stunden Boost abgeschlossen. Räume sollten jetzt warm sein."

    # === LAYER 2: AFTERNOON BOOST (15:00) ===
    - conditions:
      - condition: trigger
        id: afternoon-boost
      - condition: state
        entity_id: input_boolean.alle_sind_weg
        state: 'off'
      - condition: template
        value_template: '{{ now().month <= 4 or now().month >= 10 }}'
      - condition: numeric_state
        entity_id: sensor.temperatur_aussen
        below: 12
      sequence:
      - action: switch.turn_on
        target:
          entity_id: '{{ heating_switches }}'
      - action: notify.persistent_notification
        data:
          title: "🔥 Heizung: Afternoon Boost"
          message: "Außentemperatur < 12°C. Heizung für 1,5h vor Kinderankunft aktiviert."
      - delay: '01:30:00'
      - action: switch.turn_off
        target:
          entity_id: '{{ heating_switches }}'
      - action: notify.persistent_notification
        data:
          title: "✅ Heizung: Afternoon Boost beendet"
          message: "1,5-Stunden Boost abgeschlossen. Räume bereit für Kinder (16-17 Uhr)."
  mode: queued
  max: 2
